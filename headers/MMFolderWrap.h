//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "PBCoding-Protocol.h"

@class MMBizFileMatchNode, NSMutableArray, NSMutableDictionary, NSString;

@interface MMFolderWrap : NSObject <PBCoding>
{
    unsigned int m_fileNum;
    unsigned int m_subFolderNum;
    unsigned int m_subTotalFolderNum;
    unsigned int m_subTotalFileNum;
    int m_onlyFileTypeInUse;
    int m_onlyWeChatFileClass;
    unsigned int _m_delFileNum;
    NSString *m_name;
    NSMutableArray *m_arrChildFolder;
    unsigned long long m_fileSize;
    long long m_scanStatus;
    NSMutableDictionary *m_dicBizStat;
    long long m_onlyBizType;
    long long m_storeTimeType;
    unsigned long long m_subTotalFileSize;
    NSMutableDictionary *m_dicFileTypeInUseStat;
    NSMutableDictionary *m_dicSpecialBizStat;
    NSMutableDictionary *m_dicWechatFileClassStat;
    NSMutableArray *m_arrNotScanFileName;
    MMBizFileMatchNode *m_bizMatchNode;
    unsigned long long _m_delFileSize;
}

+ (void)initialize;
+ (void)PBArrayAdd_m_arrNotScanFileName;
+ (void)PBArrayAdd_m_dicWechatFileClassStat;
+ (void)PBArrayAdd_m_dicSpecialBizStat;
+ (void)PBArrayAdd_m_dicFileTypeInUseStat;
+ (void)PBArrayAdd_m_onlyWeChatFileClass;
+ (void)PBArrayAdd_m_onlyFileTypeInUse;
+ (void)PBArrayAdd_m_subTotalFileSize;
+ (void)PBArrayAdd_m_subTotalFileNum;
+ (void)PBArrayAdd_m_subTotalFolderNum;
+ (void)PBArrayAdd_m_subFolderNum;
+ (void)PBArrayAdd_m_storeTimeType;
+ (void)PBArrayAdd_m_onlyBizType;
+ (void)PBArrayAdd_m_dicBizStat;
+ (void)PBArrayAdd_m_scanStatus;
+ (void)PBArrayAdd_m_fileSize;
+ (void)PBArrayAdd_m_fileNum;
+ (void)PBArrayAdd_m_arrChildFolder;
+ (void)PBArrayAdd_m_name;
- (void).cxx_destruct;
@property(nonatomic) unsigned long long m_delFileSize; // @synthesize m_delFileSize=_m_delFileSize;
@property(nonatomic) unsigned int m_delFileNum; // @synthesize m_delFileNum=_m_delFileNum;
@property(retain, nonatomic) MMBizFileMatchNode *m_bizMatchNode; // @synthesize m_bizMatchNode;
@property(retain, nonatomic) NSMutableArray *m_arrNotScanFileName; // @synthesize m_arrNotScanFileName;
@property(retain, nonatomic) NSMutableDictionary *m_dicWechatFileClassStat; // @synthesize m_dicWechatFileClassStat;
@property(retain, nonatomic) NSMutableDictionary *m_dicSpecialBizStat; // @synthesize m_dicSpecialBizStat;
@property(retain, nonatomic) NSMutableDictionary *m_dicFileTypeInUseStat; // @synthesize m_dicFileTypeInUseStat;
@property(nonatomic) int m_onlyWeChatFileClass; // @synthesize m_onlyWeChatFileClass;
@property(nonatomic) int m_onlyFileTypeInUse; // @synthesize m_onlyFileTypeInUse;
@property(nonatomic) unsigned long long m_subTotalFileSize; // @synthesize m_subTotalFileSize;
@property(nonatomic) unsigned int m_subTotalFileNum; // @synthesize m_subTotalFileNum;
@property(nonatomic) unsigned int m_subTotalFolderNum; // @synthesize m_subTotalFolderNum;
@property(nonatomic) unsigned int m_subFolderNum; // @synthesize m_subFolderNum;
@property(nonatomic) long long m_storeTimeType; // @synthesize m_storeTimeType;
@property(nonatomic) long long m_onlyBizType; // @synthesize m_onlyBizType;
@property(retain, nonatomic) NSMutableDictionary *m_dicBizStat; // @synthesize m_dicBizStat;
@property(nonatomic) long long m_scanStatus; // @synthesize m_scanStatus;
@property(nonatomic) unsigned long long m_fileSize; // @synthesize m_fileSize;
@property(nonatomic) unsigned int m_fileNum; // @synthesize m_fileNum;
@property(retain, nonatomic) NSMutableArray *m_arrChildFolder; // @synthesize m_arrChildFolder;
@property(retain, nonatomic) NSString *m_name; // @synthesize m_name;
- (_Bool)isFolderMayHaveDB;
- (void)getChildFolderAndFile;
- (void)markScanFinish;
- (_Bool)isScanFinish;
- (_Bool)isMarkFolderWrap;
- (id)init;
- (id)getPBPropertyTable;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

