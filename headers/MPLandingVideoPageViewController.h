//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMUIViewController.h"

#import "CNetworkStatusExt-Protocol.h"
#import "EnterpriseConnectorLogicDelegate-Protocol.h"
#import "ForwardMessageLogicDelegate-Protocol.h"
#import "MMScrollActionSheetDelegate-Protocol.h"
#import "MMUIViewControllerExt-Protocol.h"
#import "MMWebMProfileTitleViewDelegate-Protocol.h"
#import "MMWebMenuHeaderViewDelegate-Protocol.h"
#import "MPCustomInteractiveHandlerDelegate-Protocol.h"
#import "MPLandingCommonSharePageLogicDelegate-Protocol.h"
#import "MPLandingPageMinimizeProtocol-Protocol.h"
#import "MPLandingPageReportLogicDelegate-Protocol.h"
#import "MPLandingPageTransitionCrontrollerDelegate-Protocol.h"
#import "MPLandingVideoPlayerViewDelegate-Protocol.h"
#import "MPLeftEdgeLeaveGestureHandlerDelegate-Protocol.h"
#import "MPSystemPushAnimatedTransitioningDelegate-Protocol.h"
#import "MPVideoDismissAnimatedTransitioninigDelegate-Protocol.h"
#import "MPVideoPushAnimatedTransitioningDelegate-Protocol.h"
#import "MinimizationMaximizeTransitionDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "WCActionSheetDelegate-Protocol.h"
#import "WCCommitViewResultDelegate-Protocol.h"

@class ForwardMessageLogicController, MMScrollActionSheet, MMUIButton, MMUILabel, MMWebMProfileTitleView, MMWebViewController, MPCustomInteractiveHandler, MPLandingCommonSharePageLogic, MPLandingPageCgiHandler, MPLandingPageOpenParameter, MPLandingPageReportLogic, MPLandingPageRespInitParam, MPLandingPageTransitionCrontroller, MPLandingVideoPageContext, MPLandingVideoPlayerView, MPLeftEdgeLeaveGestureHandler, NSDictionary, NSString, UIView;

@interface MPLandingVideoPageViewController : MMUIViewController <MMScrollActionSheetDelegate, EnterpriseConnectorLogicDelegate, ForwardMessageLogicDelegate, WCCommitViewResultDelegate, MMWebMenuHeaderViewDelegate, MPVideoPushAnimatedTransitioningDelegate, MPCustomInteractiveHandlerDelegate, MPLeftEdgeLeaveGestureHandlerDelegate, MPLandingPageTransitionCrontrollerDelegate, MPLandingPageMinimizeProtocol, MinimizationMaximizeTransitionDelegate, MPVideoDismissAnimatedTransitioninigDelegate, MPSystemPushAnimatedTransitioningDelegate, MPLandingVideoPlayerViewDelegate, UIScrollViewDelegate, MPLandingCommonSharePageLogicDelegate, WCActionSheetDelegate, CNetworkStatusExt, MMUIViewControllerExt, MMWebMProfileTitleViewDelegate, MPLandingPageReportLogicDelegate>
{
    NSDictionary *m_extraDict;
    _Bool _bPlayerViewInserted;
    _Bool _bPlayerSuckEdge;
    _Bool _isFirstPresentTransitionFinished;
    _Bool _needResumeWhenAppear;
    _Bool _isScrollingToTop;
    _Bool _isWebviewLoading;
    _Bool _isCurrentNetWWan;
    _Bool _isCurrentSimFree;
    _Bool _hasBeenRedirectedToUrl;
    _Bool _isGettingPageData;
    _Bool _isSwitchVideo;
    _Bool _hasActivateMinimizeArea;
    _Bool _isShareFromJSAPI;
    _Bool _isRealPlayingForReport;
    unsigned int _sessionId;
    unsigned int _enterId;
    UIView *_navBgView;
    MMUIButton *_closeBtn;
    MMUIButton *_moreBtn;
    MMUILabel *_titleLabel;
    MMWebMProfileTitleView *_profileTitleView;
    MPLandingVideoPlayerView *_playerView;
    double _playerMinRatioWhenPlaying;
    double _playerMinRatioWhenNotPlaying;
    NSDictionary *_shareExtraDict;
    MPLandingPageTransitionCrontroller *_transitionController;
    NSString *_minimizeTaskBizKey;
    MPLandingVideoPageContext *_videoPageContext;
    NSString *_commonShareForceUrl;
    MPLandingPageCgiHandler *_cgiHandler;
    ForwardMessageLogicController *_forwardMsgLogic;
    MMScrollActionSheet *_scrollActionSheet;
    UIView *_transitionStatusMaskView;
    MPCustomInteractiveHandler *_interactiveHandler;
    MPLeftEdgeLeaveGestureHandler *_leftEdgeLeaveGestureHandler;
    MPLandingCommonSharePageLogic *_commonSharePageLogic;
    MMWebViewController *_adWebViewController;
    MPLandingPageReportLogic *_reportLogic;
    struct CGRect _playerInsertRect;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool isRealPlayingForReport; // @synthesize isRealPlayingForReport=_isRealPlayingForReport;
@property(retain, nonatomic) MPLandingPageReportLogic *reportLogic; // @synthesize reportLogic=_reportLogic;
@property(retain, nonatomic) MMWebViewController *adWebViewController; // @synthesize adWebViewController=_adWebViewController;
@property(retain, nonatomic) MPLandingCommonSharePageLogic *commonSharePageLogic; // @synthesize commonSharePageLogic=_commonSharePageLogic;
@property(retain, nonatomic) MPLeftEdgeLeaveGestureHandler *leftEdgeLeaveGestureHandler; // @synthesize leftEdgeLeaveGestureHandler=_leftEdgeLeaveGestureHandler;
@property(retain, nonatomic) MPCustomInteractiveHandler *interactiveHandler; // @synthesize interactiveHandler=_interactiveHandler;
@property(retain, nonatomic) UIView *transitionStatusMaskView; // @synthesize transitionStatusMaskView=_transitionStatusMaskView;
@property(nonatomic) _Bool isShareFromJSAPI; // @synthesize isShareFromJSAPI=_isShareFromJSAPI;
@property(retain, nonatomic) MMScrollActionSheet *scrollActionSheet; // @synthesize scrollActionSheet=_scrollActionSheet;
@property(retain, nonatomic) ForwardMessageLogicController *forwardMsgLogic; // @synthesize forwardMsgLogic=_forwardMsgLogic;
@property(retain, nonatomic) MPLandingPageCgiHandler *cgiHandler; // @synthesize cgiHandler=_cgiHandler;
@property(copy, nonatomic) NSString *commonShareForceUrl; // @synthesize commonShareForceUrl=_commonShareForceUrl;
@property(retain, nonatomic) MPLandingVideoPageContext *videoPageContext; // @synthesize videoPageContext=_videoPageContext;
@property(copy, nonatomic) NSString *minimizeTaskBizKey; // @synthesize minimizeTaskBizKey=_minimizeTaskBizKey;
@property(nonatomic) _Bool hasActivateMinimizeArea; // @synthesize hasActivateMinimizeArea=_hasActivateMinimizeArea;
@property(retain, nonatomic) MPLandingPageTransitionCrontroller *transitionController; // @synthesize transitionController=_transitionController;
@property(copy, nonatomic) NSDictionary *shareExtraDict; // @synthesize shareExtraDict=_shareExtraDict;
@property(nonatomic) unsigned int enterId; // @synthesize enterId=_enterId;
@property(nonatomic) _Bool isSwitchVideo; // @synthesize isSwitchVideo=_isSwitchVideo;
@property(nonatomic) _Bool isGettingPageData; // @synthesize isGettingPageData=_isGettingPageData;
@property(nonatomic) _Bool hasBeenRedirectedToUrl; // @synthesize hasBeenRedirectedToUrl=_hasBeenRedirectedToUrl;
@property(nonatomic) _Bool isCurrentSimFree; // @synthesize isCurrentSimFree=_isCurrentSimFree;
@property(nonatomic) _Bool isCurrentNetWWan; // @synthesize isCurrentNetWWan=_isCurrentNetWWan;
@property(nonatomic) _Bool isWebviewLoading; // @synthesize isWebviewLoading=_isWebviewLoading;
@property(nonatomic) _Bool isScrollingToTop; // @synthesize isScrollingToTop=_isScrollingToTop;
@property(nonatomic) _Bool needResumeWhenAppear; // @synthesize needResumeWhenAppear=_needResumeWhenAppear;
@property(nonatomic) _Bool isFirstPresentTransitionFinished; // @synthesize isFirstPresentTransitionFinished=_isFirstPresentTransitionFinished;
@property(nonatomic) _Bool bPlayerSuckEdge; // @synthesize bPlayerSuckEdge=_bPlayerSuckEdge;
@property(nonatomic) double playerMinRatioWhenNotPlaying; // @synthesize playerMinRatioWhenNotPlaying=_playerMinRatioWhenNotPlaying;
@property(nonatomic) double playerMinRatioWhenPlaying; // @synthesize playerMinRatioWhenPlaying=_playerMinRatioWhenPlaying;
@property(nonatomic) struct CGRect playerInsertRect; // @synthesize playerInsertRect=_playerInsertRect;
@property(nonatomic) _Bool bPlayerViewInserted; // @synthesize bPlayerViewInserted=_bPlayerViewInserted;
@property(retain, nonatomic) MPLandingVideoPlayerView *playerView; // @synthesize playerView=_playerView;
@property(retain, nonatomic) MMWebMProfileTitleView *profileTitleView; // @synthesize profileTitleView=_profileTitleView;
@property(retain, nonatomic) MMUILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) MMUIButton *moreBtn; // @synthesize moreBtn=_moreBtn;
@property(retain, nonatomic) MMUIButton *closeBtn; // @synthesize closeBtn=_closeBtn;
@property(retain, nonatomic) UIView *navBgView; // @synthesize navBgView=_navBgView;
@property(nonatomic) unsigned int sessionId; // @synthesize sessionId=_sessionId;
- (unsigned long long)getCurrPlayedTimeMs;
- (_Bool)isFullScreen;
- (void)onProfileTitleViewSelected;
- (void)goBizProfileWithScene:(unsigned int)arg1;
- (void)resetShowOversizeInfoCache;
- (void)updateShowOversizeType:(unsigned long long)arg1 fileSize:(unsigned long long)arg2;
- (id)loadReqExtInfo;
- (_Bool)shouldShowOversizeTips:(unsigned long long)arg1;
- (void)tryShowOversizeIfNeed:(unsigned long long)arg1;
- (void)onSimCardNetTypeChange;
- (void)ReachabilityChange:(unsigned int)arg1;
- (_Bool)shouldInteractivePop;
- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientations;
- (void)refreshDefaultResolutionIndex;
- (void)onVideoChangeDefinitionFinish:(id)arg1;
- (void)onVideoChangeDefinitionBeginWithNewInfo:(id)arg1 oldInfo:(id)arg2 oldPlayedTimeInSecond:(double)arg3;
- (void)onVideoClickDefinitionBtn;
- (double)dotAdViewMinShowHeight;
- (void)updateDotAdViewPosInfo:(id)arg1;
- (void)updateSliderBarMarkArr:(id)arg1;
- (void)closeDotAdView:(id)arg1 isDotViewReady:(_Bool)arg2;
- (void)onDotAdViewNeedClose:(id)arg1;
- (void)showDotAdView:(id)arg1 posInfo:(id)arg2;
- (void)onDotAdViewReady:(id)arg1;
- (void)onDotAdViewLoadFinish:(id)arg1;
- (void)addDotAdViewToBack:(id)arg1;
- (void)onDotAdViewSetScripData:(id)arg1;
- (id)getInfoDictForPlayer;
- (void)openBizProfileWithScene:(unsigned int)arg1;
- (void)closeWowRecommendEditView;
- (void)closeCommentEditView;
- (_Bool)isForbidInteractiveClose;
- (void)resumeMusic;
- (void)onLoadThumbImageOk:(id)arg1;
- (_Bool)isCurrVideoVertical;
- (void)onVideoErrViewRetryBtnClicked;
- (void)onVideoControlsHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)onVideoWillBeginExitFullScreen:(long long)arg1 video:(id)arg2;
- (void)onVideoWillBeginEnterFullScreen:(long long)arg1 video:(id)arg2;
- (void)onVideoPlayerOccurAction:(unsigned long long)arg1;
- (void)onVideoChangePlayRateBefore:(double)arg1 after:(double)arg2;
- (void)onVideoClickPlayRateBtnWithCurrentRate:(double)arg1;
- (void)onSeekBarProcessCurrTime:(double)arg1 totalDuration:(double)arg2;
- (void)onVideoProcessCurrTime:(double)arg1 totalDuration:(double)arg2;
- (void)onVideoPlayFail:(unsigned long long)arg1 LocalizedErrorDes:(id)arg2;
- (void)onVideoEndSeek;
- (void)onVideoBeginSeek;
- (void)onVideoEndBuffering;
- (void)onVideoBeginBuffering;
- (void)onVideoFinishPlay;
- (void)onVideoBeginPlay;
- (void)onVideoProcessStateChanged:(unsigned long long)arg1;
- (void)onVideoStateChange:(long long)arg1;
- (void)onVideoPlayback;
- (id)getPlayerHalfScreenContainerView;
- (id)getPlayerFullScreenContainerView;
- (void)calPlayerFrameWithWebOffsetY:(double)arg1 pGetY:(double *)arg2 pGetHeight:(double *)arg3 pGetIsTopSuck:(_Bool *)arg4 pGetIsBottomSuck:(_Bool *)arg5;
- (void)smoothlyChangePlayerFrameTo:(struct CGRect)arg1;
- (void)updatePlayerViewSizeIfNeed;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollWebviewToTopByCustomIfNeed;
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;
- (_Bool)canShowDotAdView;
- (void)showAdWebViewIfNeed;
- (void)removeAdWebview;
- (void)onAdViewNeedClose:(id)arg1;
- (void)onAdViewReady:(id)arg1;
- (void)onAdViewLoadFinish:(id)arg1;
- (void)onAdViewCreated:(id)arg1;
- (id)errorWithCode:(long long)arg1 description:(id)arg2;
- (_Bool)canAdViewCreated:(id)arg1 error:(id *)arg2;
- (struct CGRect)currentAdViewBounds;
- (void)resetPlayerViewWithOpenParam;
- (void)resetVCState;
- (void)onOpPlayer:(id)arg1;
- (void)onInsertVideoNativeViewRect:(struct CGRect)arg1 landingPageType:(unsigned int)arg2 playerMinRatioWhenPlaying:(double)arg3 playerMinRatioWhenNotPlaying:(double)arg4;
- (void)switchVideoWithOpenParam:(id)arg1;
- (id)onSwitchVideo:(id)arg1 srcUserName:(id)arg2 srcDisplayName:(id)arg3 title:(id)arg4 digest:(id)arg5 cover:(id)arg6 vid:(id)arg7 pubTime:(unsigned int)arg8 duration:(unsigned int)arg9 videoWidth:(unsigned int)arg10 videoHeight:(unsigned int)arg11 scene:(unsigned int)arg12 subscene:(unsigned int)arg13 channelSessionId:(id)arg14;
- (id)mpVideoPlayInfoForVid:(id)arg1;
- (id)MPPlayerVideoState;
- (id)onCommonSharePageGetShareFuncFlag;
- (void)onCommonSharePageRecievedForceUrl:(id)arg1;
- (void)onCommonSharePageLoadFail;
- (void)onCommonSharePageLoadFinish;
- (void)onCommonSharePageStartLoad;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)setTopBarState:(_Bool)arg1 mpInfoModel:(id)arg2;
- (void)onCommonSharePageDoShareAction:(id)arg1;
- (void)onCommonSharePageHaokanStateChanged;
- (id)commonSharePageWebviewBackgroundColor;
- (id)commonSharePageBackgroundColor;
- (void)initWebView;
- (void)initCommonSharePageLogic;
- (_Bool)isCommonShareFastLoad;
- (void)updateVideoParamByVideoInfo:(id)arg1;
- (void)redirectToUrl:(id)arg1;
- (void)showGetPageInitParamFail:(id)arg1;
- (void)startVideoPlayByForce:(_Bool)arg1;
- (void)configPlayerByCgiRespIfNeed;
- (void)handlePlayerWithInitParamIfNeed;
- (void)handlePageInitParam;
- (struct CGSize)getPlayerViewMinimalSizeWhenIsPlaying:(_Bool)arg1;
- (struct CGSize)getPlayerViewMinimalSize;
- (struct CGSize)getPlayerViewMaxSize;
- (void)stop;
- (void)pause;
- (void)resumePlay;
- (void)startPlay;
- (void)setPlayerViewFrame:(struct CGRect)arg1;
- (void)setPlayerViewHeight:(double)arg1;
- (void)setPlayerViewY:(double)arg1;
- (void)initPlayerView;
- (void)onClose;
- (id)navigationBarBackgroundColor;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)initCustomNavigationBar;
- (id)commonShareWebScrollView;
- (void)viewDidPush:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)layoutNavBar;
- (void)viewDidLayoutSubviews;
- (void)viewDidBeDismissed:(_Bool)arg1;
- (void)viewDidBePoped:(_Bool)arg1;
- (void)delayShowPlayerLoadingIfNeed;
- (void)doEveryPresentTransitionFinishedAction;
- (void)doRecoverPresentTransitionFinishedAction;
- (void)doInitPresentTransitionFinishedAction;
- (void)handlePresentAnimatedTransitionFinish;
- (void)MMUIViewControllerDidDisappear:(id)arg1;
- (void)MMUIViewControllerDidAppear:(id)arg1;
- (_Bool)prefersHomeIndicatorAutoHidden;
- (void)refreshHomeIndicatorAutoHidden;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(readonly, nonatomic) MPLandingPageRespInitParam *respInitParam;
@property(readonly, nonatomic) MPLandingPageOpenParameter *openParam;
- (void)reqPageData;
- (void)initViews;
- (void)initDataWithOpenParam:(id)arg1;
- (id)initWithOpenParam:(id)arg1;
- (void)reportEventWhenPageLeave;
- (void)reportEventWhenDealloc;
- (_Bool)useBlackStatusbar;
- (void)dealloc;
- (void)onMenuHeaderViewClick;
- (_Bool)shoudlDisableMenuItem:(id)arg1;
- (_Bool)isShowMenuItem:(id)arg1;
- (void)didSelecteMenuItem:(id)arg1;
- (void)scrollActionSheet:(id)arg1 didSelecteItem:(id)arg2;
- (id)setupRow1;
- (id)setupRow2;
- (id)setupIconActionSheetCells;
- (id)setupHalfIconActionSheet;
- (id)setupPreShowIconActionSheet;
- (_Bool)shouldShowMenuHeaderView;
- (void)onShowMenuAction;
- (void)reloadMenuActionSheetIfNeeded;
- (id)buildMenuItems;
- (void)addMinimizationButtonWithArray:(id)arg1;
- (void)addViewBrandContactButtonWithArrary:(id)arg1;
- (id)getBizContonct;
- (void)addExposeButtonWithArray:(id)arg1;
- (void)addFavouriteButtonWithArray:(id)arg1;
- (void)addCopyToPasteboardButtonWithArray:(id)arg1;
- (id)AddNewActionSheetCell2Array:(id)arg1 WithText:(id)arg2 WithImage:(id)arg3 disable:(_Bool)arg4 userInfo:(id)arg5;
- (id)AddNewActionSheetCell2Array:(id)arg1 WithText:(id)arg2 WithImage:(id)arg3 disable:(_Bool)arg4;
- (id)AddNewActionSheetCell2Array:(id)arg1 WithText:(id)arg2 WithImage:(id)arg3;
- (void)exposeArticle;
- (void)copyToPasteBoard;
- (void)doShareWithAppMessage:(id)arg1 isFromJSAPI:(_Bool)arg2 extraDict:(id)arg3;
- (void)shareWithAppMessage:(id)arg1 isFromJSAPI:(_Bool)arg2 extraDict:(id)arg3;
- (void)shareWithAppMessage:(id)arg1 isFromJSAPI:(_Bool)arg2;
- (void)cancelShareToGoodLook;
- (void)onMenuWowCommitBtnClickWithContent:(id)arg1;
- (void)presentShareToGoodLookDialogWithTitle:(id)arg1 thumbImage:(id)arg2 thumbImageURL:(id)arg3;
- (void)shareToGoodLook;
- (void)shareToTimeline:(_Bool)arg1 extraDict:(id)arg2;
- (void)shareToTimeline:(_Bool)arg1;
- (void)addFavWithUrl:(id)arg1 title:(id)arg2 desc:(id)arg3 imageUrl:(id)arg4 extraDic:(id)arg5;
- (void)onCancelForwardForForwardView:(id)arg1;
- (void)onDoneForwardForForwardView:(id)arg1;
- (id)getCurrentViewController;
- (void)shareTimelineWithUrl:(id)arg1 title:(id)arg2 desc:(id)arg3 thumbData:(id)arg4 size:(struct CGSize)arg5 isFromJSAPI:(_Bool)arg6 extraDic:(id)arg7;
- (void)OnForwardMessageSend:(id)arg1;
- (void)shareToFiendWithUrl:(id)arg1 title:(id)arg2 desc:(id)arg3 thumbUrl:(id)arg4 isFromJSAPI:(_Bool)arg5 extraDic:(id)arg6;
- (id)getFavAppMsgShareItem;
- (id)getWCAppMsgShareInfo;
- (id)getAppMsgShareItem;
- (id)getShareThumbUrl;
- (id)getShareDesc;
- (id)getShareTitle;
- (id)getShareUrl;
- (id)getCopyUrl;
- (_Bool)isAddedToGookLook;
- (_Bool)shouldShowGoodLookItem;
- (_Bool)isBlockJumpBizProfile;
- (_Bool)isBlockCopyLink;
- (_Bool)isBlockShareFavorites;
- (_Bool)isBlockShareToTimeline;
- (_Bool)isBlockShareToFriend;
- (id)pushAnimatedTransitionContentViewForFading;
- (double)pushAnimatedTransitionVideoAspectRatio;
- (struct CGRect)pushAnimatedTransitionTargetRect;
- (struct CGRect)pushAnimatedTransitionOriginRect;
- (id)pushAnimatedTransitionThumbImage;
- (void)onPushAnimatedTransitionFinish;
- (void)onPushAnimatedTransitionBegin;
- (id)dismissTransitionMaskView;
- (void)onMaximizeTransitionEnd;
- (void)onMaximizeTransitionBegin;
- (void)onMPSystemPushTransitioningFinish;
- (_Bool)isMinimized;
- (id)interactionHandler;
- (id)dismissAnimation;
- (id)presentAnimation;
- (id)minimizedAnimation;
- (id)maximizeAnimation;
- (void)willLeavePageByMinimization;
- (id)arrLandingPageWebViewControllers;
- (unsigned int)landingPageReportType;
- (id)landingPageTitle;
- (id)landingPageIconUrl;
- (id)landingPageTransitionController;
- (id)landingPageOpenParam;
- (void)updateTaskBizKey:(id)arg1;
- (id)taskBizKey;
- (_Bool)scrollViewDragDownGestureHandler:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)leftEdgeLeaveGestureHandler:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)dragDownGestureHandler:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)delayShow:(id)arg1;
- (void)beginFirstPageMinimizationTansitionAnimationWithGesture:(id)arg1 percent:(double)arg2;
- (void)onCustomInteractiveTransitioningDidEnd:(id)arg1 isComplete:(_Bool)arg2 panGesture:(id)arg3;
- (void)onCustomInteractiveTransitioningWillEnd:(id)arg1 isComplete:(_Bool)arg2 panGesture:(id)arg3;
- (void)onCustomInteractiveTransitioningUpdated:(id)arg1 progress:(double)arg2 panGesture:(id)arg3;
- (void)onCustomInteractiveTransitioningBegin:(id)arg1;
- (void)tryRescueMinimizeSelfWhenViewDidBeDismissed;
- (void)setPageChildWebsMinimizationState:(_Bool)arg1;
- (void)tryUnminimizedSelf;
- (void)doMinimizeSelfIfFromTransition:(_Bool)arg1;
- (void)tryMinimizeSelf:(id)arg1;
- (void)tryMinimizeSelfOnClose;
- (void)setupLeaveGesture;
- (void)initTransitionStatusMaskView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

