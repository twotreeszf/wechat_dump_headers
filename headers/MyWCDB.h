//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class WCTDatabase, WCTTable;

@interface MyWCDB : NSObject
{
    WCTDatabase *m_db;
    int m_dataCodingType;
    WCTTable *m_tableDataItem;
    WCTTable *m_tableMessage;
    WCTTable *m_tableStrangerMessage;
    WCTTable *m_tableTimeline;
    WCTTable *m_tableHomePage;
    WCTTable *m_tableBgImgLiked;
    WCTTable *m_tableIdOwner;
    WCTTable *m_tableTimelineGroupHint;
    WCTTable *m_tableTimelineFeedSegment;
    WCTTable *m_tableTimelineMicroMerchantFeed;
    WCTTable *m_tableMicroMerchantFeedRelation;
}

- (void).cxx_destruct;
@property(retain, nonatomic) WCTTable *m_tableTimelineMicroMerchantFeed; // @synthesize m_tableTimelineMicroMerchantFeed;
@property(retain, nonatomic) WCTTable *m_tableMicroMerchantFeedRelation; // @synthesize m_tableMicroMerchantFeedRelation;
@property(retain, nonatomic) WCTTable *m_tableTimelineFeedSegment; // @synthesize m_tableTimelineFeedSegment;
@property(retain, nonatomic) WCTTable *m_tableTimelineGroupHint; // @synthesize m_tableTimelineGroupHint;
@property(retain, nonatomic) WCTTable *m_tableIdOwner; // @synthesize m_tableIdOwner;
@property(retain, nonatomic) WCTTable *m_tableBgImgLiked; // @synthesize m_tableBgImgLiked;
@property(retain, nonatomic) WCTTable *m_tableHomePage; // @synthesize m_tableHomePage;
@property(retain, nonatomic) WCTTable *m_tableTimeline; // @synthesize m_tableTimeline;
@property(retain, nonatomic) WCTTable *m_tableStrangerMessage; // @synthesize m_tableStrangerMessage;
@property(retain, nonatomic) WCTTable *m_tableMessage; // @synthesize m_tableMessage;
@property(retain, nonatomic) WCTTable *m_tableDataItem; // @synthesize m_tableDataItem;
@property(nonatomic) int m_dataCodingType; // @synthesize m_dataCodingType;
@property(retain, nonatomic) WCTDatabase *m_db; // @synthesize m_db;
- (id)getIndexInTimeline:(id)arg1;
- (id)getDataItemsForUser:(id)arg1 atMost:(long long)arg2;
- (void)updateMsgDelStat:(_Bool)arg1 forAdSnsObj:(id)arg2 timeLimit:(unsigned int)arg3;
- (void)updateMsgDelStat:(_Bool)arg1 forSnsObjID:(unsigned long long)arg2 timeLimit:(unsigned int)arg3;
- (void)updateMsgDelStat:(_Bool)arg1 forMsg:(id)arg2 timeLimit:(unsigned int)arg3;
- (void)updateMsgDelStat:(_Bool)arg1 forAdSns:(id)arg2;
- (void)updateMsgDelStat:(_Bool)arg1 forSns:(id)arg2;
- (void)updateMsgDelStat:(_Bool)arg1 forMsgs:(id)arg2;
- (_Bool)setOwner:(id)arg1 withItemID:(id)arg2;
- (id)getOwnerByItemID:(id)arg1;
- (void)setBGImgLiked:(id)arg1 username:(id)arg2;
- (_Bool)isBGImgLiked:(id)arg1 username:(id)arg2;
- (id)getDataItemsByIds:(id)arg1;
- (id)tryGetDataItemByItemID:(id)arg1;
- (_Bool)tryExecuteUpdateAgain:(const SyntaxList_7f15fe8c *)arg1 toObject:(id)arg2 where:(const struct Expression *)arg3 afterReCreateTable:(id)arg4 userName:(id)arg5;
- (_Bool)updateAllCacheWithDataItem:(id)arg1 useTransaction:(_Bool)arg2;
- (id)getMaxID;
- (_Bool)deleteRowInWCIndexForUser:(id)arg1 AfterItemID:(id)arg2;
- (_Bool)deleteRowInWCIndexForUser:(id)arg1 ByItemID:(id)arg2;
- (_Bool)deleteRowInTimelineLimitCountWithOrderAsc:(long long)arg1;
- (_Bool)deleteRowInTimelineByItemID:(id)arg1;
- (id)getWCIndexDataItemListForUser:(id)arg1 withItemID:(id)arg2;
- (id)getDataItemListFromTable:(id)arg1 beforeItemId:(id)arg2 maxItemId:(id)arg3 maxCount:(long long)arg4;
- (id)getWCIndexDataItemListForUser:(id)arg1 beforeItemId:(id)arg2 maxItemId:(id)arg3 maxCount:(long long)arg4;
- (id)getWCIndexDataItemListForUser:(id)arg1 AfterItemID:(id)arg2 andMaxCount:(long long)arg3;
- (id)getWCTimeLineDataItemWithItemID:(id)arg1;
- (id)getWCTimeLineDataItemDictionaryByArrayItemID:(id)arg1;
- (id)getDataItemDictionaryFromTable:(id)arg1 arrayItemID:(id)arg2;
- (id)getLatestDataItem:(id)arg1;
- (id)getWCTimeLineDataItemListBefore:(id)arg1 maxItemId:(id)arg2 maxCount:(long long)arg3;
- (unsigned int)getWCTimeLineDataItemCount;
- (unsigned int)getWCTimeLineDataItemCount:(id)arg1 minId:(id)arg2;
- (id)getWCTimeLineDataItemListAfterItemID:(id)arg1 andMaxCount:(long long)arg2;
- (id)getFirstWCTimeLineDataItemAfterItemID:(id)arg1;
- (id)getDataItemListFromTable:(id)arg1 afterItemID:(id)arg2 limit:(int)arg3;
- (id)getFirstDataItemFromTable:(id)arg1 AfterItemID:(id)arg2;
- (_Bool)deleteAllIndexDataForUser:(id)arg1;
- (_Bool)deleteAllTimelineTableData;
- (_Bool)updateWCIndexForUser:(id)arg1 WithDatas:(id)arg2 AfterItemID:(id)arg3 ToItemID:(id)arg4;
- (_Bool)updateWCIndexForUser:(id)arg1 WithDatas:(id)arg2 AfterItemID:(id)arg3;
- (_Bool)updateMainTimelineTableWithDatas:(id)arg1 AfterItemID:(id)arg2 ToItemID:(id)arg3 wsGroups:(id)arg4;
- (_Bool)updateWCTimeLineTableWithDatas:(id)arg1 AfterItemID:(id)arg2 ToItemID:(id)arg3 wsGroups:(id)arg4;
- (_Bool)updateWCTimeLineTableWithDatas:(id)arg1 AfterItemID:(id)arg2 wsGroups:(id)arg3;
- (_Bool)updateWCTimeLineTableWithChangedDatas:(id)arg1;
- (_Bool)updateTable:(id)arg1 WithDatas:(id)arg2 AfterItemID:(id)arg3 ToItemID:(id)arg4;
- (_Bool)updateTable:(id)arg1 WithDatas:(id)arg2 AfterItemID:(id)arg3;
- (id)getLatestTimelineRowDataInTable:(id)arg1;
- (id)getTimelineRowDataByTtemID:(id)arg1 InTable:(id)arg2;
- (int)getMaxGroupHintInTable:(id)arg1;
- (id)WCIndexTableForUserWithTableName:(id)arg1;
- (id)getStrangerMessagesOfItem:(id)arg1 partner:(id)arg2;
- (_Bool)addStrangerMessage:(id)arg1 toItem:(id)arg2;
- (_Bool)deleteAllMessages;
- (_Bool)deleteMessage:(id)arg1;
- (_Bool)setAllWCMessagesRead;
- (_Bool)setWcMessageAllReadBeginWithId:(unsigned int)arg1;
- (_Bool)setWCMessageListRead:(id)arg1;
- (_Bool)setWCMessageRead:(id)arg1;
- (_Bool)addNewWCMessage:(id)arg1;
- (id)getRawWCMessagesForClearLimit:(int)arg1 unReadOnly:(_Bool)arg2;
- (id)getWCMessagesFrom:(id)arg1 maxCount:(unsigned int)arg2;
- (id)getUnReadMessagesLimit:(int)arg1;
- (id)getUnreadWCMessages;
- (unsigned int)getUnReadMessageCount;
- (id)getAllWCMessages;
- (id)getLatestReadMessage;
- (id)getWCMessage:(id)arg1;
- (id)getLatestMessage;
- (id)WCMessagesFromDBMessages:(id)arg1;
- (id)WCMessageFromDBMessage:(id)arg1;
- (_Bool)deleteWCDataItemByItemID:(id)arg1;
- (_Bool)setWCDataItem:(id)arg1 forItemID:(id)arg2;
- (id)getWCDataItemByItemID:(id)arg1;
- (id)createTable:(Class)arg1 name:(id)arg2;
- (_Bool)CreateMicroMerchantTable;
- (_Bool)CreateIdOwner;
- (_Bool)CreateBgImgLiked;
- (_Bool)CreateWCIndexTableForUser:(id)arg1;
- (id)WCIndexTableNameForUser:(id)arg1;
- (id)internalCreateTimelineTable:(id)arg1;
- (_Bool)CreateWCTimeLineTable;
- (_Bool)CreateStrangerMessageTable;
- (_Bool)CreateMyWCMessageTable;
- (_Bool)CreateMyWCAttrTable;
- (_Bool)createTables;
- (void)clearAllWCData;
- (void)clearAllTables;
- (void)closeDBBeforeInit;
- (void)closeDB;
- (_Bool)initDB;
- (_Bool)isUsingPBCoding;
- (void)setupExptConfigure;
- (void)dealloc;
- (id)init;
- (_Bool)runCleanTask:(unsigned int)arg1 maxCleanPerLoop:(unsigned int)arg2 commitThreshold:(unsigned int)arg3;
- (void)cleanupTimelineTableWithBlockOnceOp:(unsigned int)arg1 maxCleanPerLoop:(unsigned int)arg2 commitThreshold:(unsigned int)arg3 block:(CDUnknownBlockType)arg4;
- (id)extraAllFeedIds:(id)arg1;
- (SyntaxList_04d0acd9)transformIdsToExpression:(id)arg1;
- (_Bool)clearNoUseSegments:(id)arg1;
- (void)clearSoftDeletedMicroMerchantFeeds;
- (_Bool)dropAllSegments;
- (_Bool)dropAllMicroMerchantItems;
- (_Bool)dropAllRelations;
- (unsigned int)getDistinctMicroMerchantGroupCnt;
- (id)getDistinctGroupIDWithFeedIds:(id)arg1;
- (id)getDistinctGroupIDFromBottom:(id)arg1 toTop:(id)arg2;
- (id)getMicroMerchantFeedsGroupFromBottom:(id)arg1 toTop:(id)arg2;
- (id)getMicroMerchantFeedsGroupWithPartWsFeedIds:(id)arg1;
- (id)getAllMicroMerchantFeedsGroup;
- (id)getMicroMerchantDataItemsWithFeedId:(id)arg1;
- (_Bool)deleteMicroMerchantItemsOfGroup:(id)arg1;
- (id)getAllFeedsInRelationTableOfGroupId:(id)arg1 containDel:(_Bool)arg2;
- (id)getMicroMerchantDataItemsWithFeedIds:(id)arg1;
- (id)getMicroMerchantDataItemsWithGroupId:(id)arg1;
- (_Bool)deleteMicroMerchantDataItemById:(id)arg1;
- (_Bool)modMicroMerchantDataItem:(id)arg1;
- (_Bool)replaceMicroMerchantDataItem:(id)arg1 referenceGroup:(id)arg2;
- (_Bool)replaceMicroMerchantDataItems:(id)arg1 newWSGroup:(id)arg2;
- (id)getMicroMerchantFeedsGroupWithDistinctGroupID:(id)arg1;
- (_Bool)deleteMicroMerchanRelationOfGroup:(id)arg1;
- (_Bool)insertOrReplaceMicroMerchantRelation:(id)arg1 referenceTopDataItem:(id)arg2;
- (_Bool)deleteMicroMerchantRelationWithRangeCondition:(const struct Expression *)arg1;
- (_Bool)deleteMicroMerchantRelation:(id)arg1;
- (_Bool)insertMicroMerchantRelations:(id)arg1;
- (void)modMicroMerchantDataItemIfNeeded:(id)arg1;
- (void)deleteMicroMerchantFromTableIfNeed:(id)arg1 bottomID:(id)arg2 lastItemID:(id)arg3;
- (void)updateMicroMerchantToTableIfNeed:(id)arg1 wsGroups:(id)arg2;
- (unsigned int)getMaxGroupHintID;
- (unsigned int)getGroupHintsCount;
- (id)getMaxGroupHint;
- (_Bool)deleteGroupHint:(id)arg1;
- (id)selectGroupHintWithFeedId:(id)arg1;
- (_Bool)updateGroupHint:(id)arg1;
- (_Bool)insertGroupHints:(id)arg1;
- (_Bool)insertGroupHint:(id)arg1;
- (_Bool)createGroupHintTable;
- (id)selectSegmentOfMaxGroupID;
- (id)getAllSegments:(unsigned int)arg1;
- (_Bool)updateSegment:(id)arg1 insertSegments:(id)arg2 finishBlock:(CDUnknownBlockType)arg3;

@end

