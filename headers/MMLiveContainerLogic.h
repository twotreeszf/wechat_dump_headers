//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "IMinimizeTaskDelegateInterface-Protocol.h"
#import "MMLiveCustomTransitionDelegate-Protocol.h"
#import "MMLiveMinimizationInteractiveDelegate-Protocol.h"
#import "MMLiveMinimizeWindowDelegate-Protocol.h"
#import "UIViewControllerTransitioningDelegate-Protocol.h"

@class MMLiveMinimizationInteractiveLogic, MMLiveMinimizeWindow, MMUIButton, MMUIView, MMUIViewController, MinimizeTaskData, NSArray, NSString, TransitionStateInfo, UIGestureRecognizer, UIImage, UIImageView, UINavigationController, UIView;
@protocol MMLiveContainerLogicControllerDelegate, MMLiveContainerLogicDelegate;

@interface MMLiveContainerLogic : NSObject <UIViewControllerTransitioningDelegate, MMLiveCustomTransitionDelegate, MMLiveMinimizeWindowDelegate, IMinimizeTaskDelegateInterface, MMLiveMinimizationInteractiveDelegate>
{
    _Bool _hasStartQuitAnimation;
    _Bool _supportEdgePanGesture;
    _Bool _showNetworkFailIndicatorView;
    _Bool _isCollapsing;
    _Bool _isExtending;
    _Bool _isFinishExtendFromCollapse;
    _Bool _isFinishRotateForExtend;
    _Bool _useCommonMinimizeWindow;
    _Bool _isMinimizeMode;
    id <MMLiveContainerLogicDelegate> _liveContainerDelegate;
    long long _currTransitionState;
    UIImage *_snapShotImage;
    MMUIViewController<MMLiveContainerLogicControllerDelegate> *_logicControllerDelegate;
    MMLiveMinimizeWindow *_minimizeWindow;
    UINavigationController *_navigationController;
    TransitionStateInfo *_nextTransitionStateInfo;
    NSArray *_iphoneExtendIgnoreVCArray;
    NSArray *_ipadExtendIgnoreVCArray;
    MinimizeTaskData *_minimizeTaskData;
    MMLiveMinimizationInteractiveLogic *_minizationInteractiveLogic;
    MMUIButton *_closeButton;
    MMUIView *_minimizeLiveContainerView;
    UIImageView *_topShadowView;
    UIView *_liveEndIndicatorView;
    UIView *_networkFailIndicatorView;
    UIView *_remoteErrorIndicatorView;
    unsigned long long _indicatorState;
    CDUnknownBlockType _collapseCompletionCallback;
    struct CGRect _minimizeFrame;
}

+ (_Bool)isSpecalVCForCheckEnablePresentInIOS14:(id)arg1;
+ (_Bool)isPresentingControllerEnableToPresent:(id)arg1;
+ (_Bool)checkIsEnableToPresent;
+ (id)getPresentingVC;
- (void).cxx_destruct;
@property(copy, nonatomic) CDUnknownBlockType collapseCompletionCallback; // @synthesize collapseCompletionCallback=_collapseCompletionCallback;
@property(nonatomic) unsigned long long indicatorState; // @synthesize indicatorState=_indicatorState;
@property(retain, nonatomic) UIView *remoteErrorIndicatorView; // @synthesize remoteErrorIndicatorView=_remoteErrorIndicatorView;
@property(retain, nonatomic) UIView *networkFailIndicatorView; // @synthesize networkFailIndicatorView=_networkFailIndicatorView;
@property(retain, nonatomic) UIView *liveEndIndicatorView; // @synthesize liveEndIndicatorView=_liveEndIndicatorView;
@property(retain, nonatomic) UIImageView *topShadowView; // @synthesize topShadowView=_topShadowView;
@property(retain, nonatomic) MMUIView *minimizeLiveContainerView; // @synthesize minimizeLiveContainerView=_minimizeLiveContainerView;
@property(retain, nonatomic) MMUIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) MMLiveMinimizationInteractiveLogic *minizationInteractiveLogic; // @synthesize minizationInteractiveLogic=_minizationInteractiveLogic;
@property(nonatomic) _Bool isMinimizeMode; // @synthesize isMinimizeMode=_isMinimizeMode;
@property(retain, nonatomic) MinimizeTaskData *minimizeTaskData; // @synthesize minimizeTaskData=_minimizeTaskData;
@property(nonatomic) _Bool useCommonMinimizeWindow; // @synthesize useCommonMinimizeWindow=_useCommonMinimizeWindow;
@property(nonatomic) _Bool isFinishRotateForExtend; // @synthesize isFinishRotateForExtend=_isFinishRotateForExtend;
@property(nonatomic) _Bool isFinishExtendFromCollapse; // @synthesize isFinishExtendFromCollapse=_isFinishExtendFromCollapse;
@property(retain, nonatomic) NSArray *ipadExtendIgnoreVCArray; // @synthesize ipadExtendIgnoreVCArray=_ipadExtendIgnoreVCArray;
@property(retain, nonatomic) NSArray *iphoneExtendIgnoreVCArray; // @synthesize iphoneExtendIgnoreVCArray=_iphoneExtendIgnoreVCArray;
@property(retain, nonatomic) TransitionStateInfo *nextTransitionStateInfo; // @synthesize nextTransitionStateInfo=_nextTransitionStateInfo;
@property(retain, nonatomic) UINavigationController *navigationController; // @synthesize navigationController=_navigationController;
@property(nonatomic) _Bool isExtending; // @synthesize isExtending=_isExtending;
@property(nonatomic) _Bool isCollapsing; // @synthesize isCollapsing=_isCollapsing;
@property(retain, nonatomic) MMLiveMinimizeWindow *minimizeWindow; // @synthesize minimizeWindow=_minimizeWindow;
@property(nonatomic) __weak MMUIViewController<MMLiveContainerLogicControllerDelegate> *logicControllerDelegate; // @synthesize logicControllerDelegate=_logicControllerDelegate;
@property(retain, nonatomic) UIImage *snapShotImage; // @synthesize snapShotImage=_snapShotImage;
@property(nonatomic) struct CGRect minimizeFrame; // @synthesize minimizeFrame=_minimizeFrame;
@property(nonatomic) _Bool showNetworkFailIndicatorView; // @synthesize showNetworkFailIndicatorView=_showNetworkFailIndicatorView;
@property(nonatomic) _Bool supportEdgePanGesture; // @synthesize supportEdgePanGesture=_supportEdgePanGesture;
@property(nonatomic) long long currTransitionState; // @synthesize currTransitionState=_currTransitionState;
@property(nonatomic) _Bool hasStartQuitAnimation; // @synthesize hasStartQuitAnimation=_hasStartQuitAnimation;
@property(nonatomic) __weak id <MMLiveContainerLogicDelegate> liveContainerDelegate; // @synthesize liveContainerDelegate=_liveContainerDelegate;
- (void)attachLiveViewToMinimizeContainer;
- (id)indicatorBackgroundViewWithFrame:(struct CGRect)arg1;
- (id)failIndicatorViewWithFrame:(struct CGRect)arg1 hint:(id)arg2;
- (id)networkFailIndicatorWithFrame:(struct CGRect)arg1;
- (id)remoteErrorIndicatorViewWithFrame:(struct CGRect)arg1;
- (id)liveEndIndicatorWithFrame:(struct CGRect)arg1;
- (void)hideRemoteErrorIndicator;
- (void)hideNetworkFailIndicator;
- (void)hideLiveEndIndicator;
- (void)hideTopShadow;
- (void)hideCloseButton;
- (void)displayRemoteErrorIndicator;
- (void)displayNetworkFailIndicator;
- (void)displayLiveEndIndicator;
- (void)displayTopShadow;
- (void)displayCloseButton;
- (void)hideIndicators;
- (void)displayIndicators;
- (long long)onMMLiveMinimizeWindowRequestPreviousOrientation;
- (void)onMMLiveMinimizeWindowClicked;
- (void)onContainerSizeDidChange:(id)arg1 fromSize:(struct CGSize)arg2 toSize:(struct CGSize)arg3;
- (void)onEnterMinimizedTask:(id)arg1 openContext:(id)arg2 taskEnterScene:(unsigned int)arg3;
- (id)getCurrentMinimizeTaskFloatingView;
- (_Bool)canUseGlobalMinimization;
- (void)updateMinimizeViewFromSize:(struct CGSize)arg1 toSize:(struct CGSize)arg2;
- (id)getMinimizeTaskKey;
- (id)getMinimizeTaskData;
- (struct CGRect)minimizeWindowFrame;
- (id)convertSceneInfo:(id)arg1;
- (void)transferConfigScenes;
- (_Bool)isViewControllerMustIgnoreExtendLive:(id)arg1;
- (id)getIgnoreExtendLiveSceneInfo:(id)arg1;
- (id)requestSnapshotImage;
- (long long)requestPreviousOrientation;
- (struct CGRect)requestMinimizeLiveFrameInScreen;
- (struct CGRect)requestMinimizeFrame;
- (long long)requestCurrentTransitionState;
- (id)interactionControllerForDismissal:(id)arg1;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (void)onMinimizationInteractiveQuitDidEnd;
- (void)onMinimizationInteractiveDidEnd:(_Bool)arg1;
- (void)onMinimizationInteractiveWillEnd:(_Bool)arg1;
- (_Bool)minimizationInteractiveShouldInvoke;
- (_Bool)minimizationInteractiveShouldBegin;
- (void)onMinimizationInteractiveDidBegin;
@property(readonly, nonatomic) _Bool isShowWindowOverLiveVC;
- (void)clearIndicatorStateFlag:(unsigned long long)arg1;
- (void)setIndicatorStateFlag:(unsigned long long)arg1;
- (void)onCloseButtonClicked;
@property(readonly) UIGestureRecognizer *edgeGestureRecognizer;
- (void)addScreenEdgePanGestureRecognizer:(id)arg1;
- (id)createVisualEffectView;
- (void)dismissControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)presentLiveViewControllerWithExistingNavigationAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)presentLiveViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)isNeedAddVisualView;
- (_Bool)checkIsEnableToPresentLiveViewController;
- (void)changeStatusBarColor;
- (void)restoreStatusBarColor;
- (void)minimizeInteractiveDidEnd;
- (void)minimizeInteractiveWillEnd;
- (void)quitWithAnimationDidStop;
- (void)collapseWithAnimationDidStop;
- (void)quitWithoutNavigation;
- (void)dismissTopControllerWithoutQuitingAnimated:(_Bool)arg1;
- (void)quitAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)quitWithoutAnimation:(CDUnknownBlockType)arg1;
- (void)quitWithAnimation:(CDUnknownBlockType)arg1;
- (long long)getImageOrientation;
- (void)restoreOrientationForLandScape;
- (void)extendFromCollapseForPreviousLandscape;
- (void)checkExtendFromCollapseFinish;
- (void)restoreOrientationForPortrait;
- (void)restoreMinimizeWindowForExtendFail;
- (void)extendFromCollapseForPreviousPortrait;
- (void)extendFromCollapseWithAnimation;
- (void)closeCurrentLiveAndRemoveMinimizeTask;
- (void)removeLiveMinimizeTask;
- (void)dismissLiveMinimizedWindow;
- (void)showLiveInMinimizedWindow;
- (void)invokeCollapseWithAnimation;
- (_Bool)checkNeedInvokeCollapse;
- (void)ensureEndTransitionAfterDelay;
- (void)collapseWithAnimation:(CDUnknownBlockType)arg1;
- (void)fadeInWithAnimation;
- (_Bool)extendWithAnimation;
- (void)presentViewControllerWithAnimation:(id)arg1 animated:(_Bool)arg2;
- (void)endTransition;
- (_Bool)isIndicatorEnd;
- (_Bool)isCurrentTransitionStateValid;
- (void)updateMinimizeWindowWithLiveView:(id)arg1;
- (id)initWithLogicControllerDelegate:(id)arg1 useCommonMinimizeWindow:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

