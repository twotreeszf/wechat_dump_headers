//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMObject.h"

@interface OpenApiHandler : MMObject
{
}

+ (id)SHA256Hash:(id)arg1;
+ (_Bool)checkTokenValid:(id)arg1 universalLink:(id)arg2;
+ (id)genTokenByUniversalLink:(id)arg1 timeStamp:(unsigned int)arg2;
+ (id)genTokenByUniversalLink:(id)arg1;
+ (void)sendRefreshTokenRespToAppWithPayOpenApiParameter:(id)arg1 appIconUrl:(id)arg2 appNickname:(id)arg3 presentViewController:(id)arg4 dismissCompletion:(CDUnknownBlockType)arg5;
+ (void)sendRefreshTokenRespToApp:(id)arg1 appIconUrl:(id)arg2 appNickname:(id)arg3 presentViewController:(id)arg4 dismissCompletion:(CDUnknownBlockType)arg5;
+ (id)appendQueryToUrl:(id)arg1 key:(id)arg2 value:(id)arg3;
+ (id)genSchemeUrlWithAppId:(id)arg1 extraUrl:(id)arg2;
+ (id)genUniversalLinkWithAppId:(id)arg1 universalLink:(id)arg2 extraUrl:(id)arg3;
+ (id)genLaunchUrlWithAppId:(id)arg1 universalLink:(id)arg2 extraUrl:(id)arg3;
+ (id)genResendContextReqSchemeUrl:(id)arg1 contextID:(id)arg2;
+ (id)appendTokenToUrl:(id)arg1 universalLink:(id)arg2 contextID:(id)arg3 token:(id *)arg4;
+ (id)appendTokenToUrl:(id)arg1 universalLink:(id)arg2 contextID:(id)arg3;
+ (id)genRefreshTokenUniversalLink:(id)arg1 appID:(id)arg2 contextID:(id)arg3 token:(id *)arg4;
+ (_Bool)isUrl:(id)arg1 hasValidPrefixWithUniversalLink:(id)arg2;
+ (id)parseAndRemoveQueryFromUrl:(id)arg1 keyArray:(id)arg2 outputKeyValueDic:(id *)arg3;
+ (id)parseAndRemoveAppExtraDataFromUrl:(id)arg1 sdkBundleID:(id *)arg2 isDegradeLaunchByScheme:(_Bool *)arg3;
+ (id)parseAndRemoveAppExtraDataFromUrl:(id)arg1 token:(id *)arg2 contextID:(id *)arg3 sdkBundleID:(id *)arg4;
+ (_Bool)handleOpenApiUrlWithOpenParam:(id)arg1;
+ (id)createOpenParamWithUrl:(id)arg1 apiName:(id)arg2 appID:(id)arg3 bundleID:(id)arg4 isLaunchByUniversalLink:(_Bool)arg5;
+ (_Bool)checkAndReportReadPasteboardFail:(id)arg1;
+ (void)reportLaunchAppWithUniversalLink:(id)arg1 appID:(id)arg2 token:(id)arg3 success:(_Bool)arg4 scene:(unsigned int)arg5;
+ (void)reportTransalteLinkRefreshTokenLaunchSchemeSuccess;
+ (void)reportTransalteLinkRefreshTokenLaunchUniversalLinkFail;
+ (void)reportTransalteLinkRefreshToken;
+ (void)reportWCPayLaunch3rdWithScheme;
+ (void)reportWCPayLaunch3rdWithSchemeSuccessByUniversalLinkFail:(_Bool)arg1 showUI:(_Bool)arg2;
+ (void)reportWCPayLaunch3rdWithUniversalLinkFail:(_Bool)arg1 showUI:(_Bool)arg2;
+ (void)reportWCPayLaunch3rdWithUniversalLink:(_Bool)arg1 showUI:(_Bool)arg2;
+ (void)reportWCPayLaunch3rdWithUniversalLink;
+ (void)reportWCPayLaunchWithOpenParameter:(id)arg1;
+ (void)reportAuthUserConfirmAlertSchemeJumpSuccess:(_Bool)arg1;
+ (void)reportAuthUserCancelAlertSchemeJump:(_Bool)arg1;
+ (void)reportAuthUserConfirmAlertSchemeJump:(_Bool)arg1;
+ (void)reportAuthShowAlertSchemeJump:(_Bool)arg1;
+ (void)reportAuthLaunch3rdAppByUniversalLink:(_Bool)arg1;
+ (void)reportAuthLaunch3rdApp:(_Bool)arg1 withToken:(_Bool)arg2;
+ (void)reportAuthRejectBySvr:(_Bool)arg1;
+ (void)reportAuthLaunchWithOpenParameter:(id)arg1;
+ (void)reportLaunchAppWithUniversalLinkFailDegradeScheme;
+ (void)reportLaunchAppWithUniversalLinkFail;
+ (void)reportLaunchAppWithUniversalLink;
+ (void)reportLaunchWXWithOpenParameter:(id)arg1;
+ (void)reportRefreshTokenResult:(id)arg1 appNickName:(id)arg2 universalLink:(id)arg3 bundleID:(id)arg4 sdkBundleID:(id)arg5 token:(id)arg6 sdkVersion:(id)arg7 resultCode:(unsigned long long)arg8 errMsg:(id)arg9;
+ (void)reportRefreshTokenResultWithOpenParameter:(id)arg1 errMsg:(id)arg2;
+ (void)reportRefreshToken;
+ (unsigned int)convertVersionStrToInt:(id)arg1;

@end

