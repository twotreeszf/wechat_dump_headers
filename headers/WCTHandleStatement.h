//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSString;

@interface WCTHandleStatement : NSObject
{
    struct HandleStatement *_handleStatement;
    NSString *_tag;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *tag; // @synthesize tag=_tag;
- (id)allMultiObjectsOnResultColumns:(const SyntaxList_d92903c3 *)arg1;
- (id)allObjectsOnResultColumns:(const SyntaxList_d92903c3 *)arg1;
- (id)allRows;
- (id)allValuesAtIndex:(int)arg1;
- (id)allValues;
- (void)extractValueAtIndex:(int)arg1 toColumnBindingHolder:(const struct WCTColumnBindingHolder *)arg2 ofObject:(id)arg3;
- (void)extractValueAtIndex:(int)arg1 toProperty:(const struct WCTProperty *)arg2 ofObject:(id)arg3;
- (id)extractMultiObjectOnResultColumns:(const SyntaxList_d92903c3 *)arg1;
- (id)extractObjectOnResultColumns:(const SyntaxList_d92903c3 *)arg1;
- (id)extractRow;
- (id)extractTableNameAtIndex:(int)arg1;
- (id)extractColumnNameAtIndex:(int)arg1;
- (id)extractOriginColumnNameAtIndex:(int)arg1;
- (int)extractNumberOfColumns;
- (unsigned long long)extractTypeAtIndex:(int)arg1;
- (id)extractValueAtIndex:(int)arg1;
- (id)extractDataAtIndex:(int)arg1;
- (id)extractNumberAtIndex:(int)arg1;
- (id)extractStringAtIndex:(int)arg1;
- (double)extractDoubleAtIndex:(int)arg1;
- (long long)extractIntegerAtIndex:(int)arg1;
- (int)bindParameterIndex:(const struct BindParameter *)arg1;
- (void)bindProperties:(const SyntaxList_7f15fe8c *)arg1 ofObject:(id)arg2;
- (void)bindProperty:(const struct WCTProperty *)arg1 ofObject:(id)arg2 toIndex:(int)arg3;
- (void)bindValue:(id)arg1 toIndex:(int)arg2;
- (void)bindNumber:(id)arg1 toIndex:(int)arg2;
- (void)bindData:(id)arg1 toIndex:(int)arg2;
- (void)bindString:(id)arg1 toIndex:(int)arg2;
- (void)bindNullToIndex:(int)arg1;
- (void)bindDouble:(const double *)arg1 toIndex:(int)arg2;
- (void)bindInteger:(const long long *)arg1 toIndex:(int)arg2;
- (_Bool)isStatementReadonly;
- (_Bool)done;
- (void)reset;
- (_Bool)step;
- (void)finalize;
- (_Bool)isPrepared;
- (_Bool)rawPrepare:(id)arg1;
- (_Bool)prepare:(const struct Statement *)arg1;
- (_Bool)rawExecute:(id)arg1;
- (_Bool)execute:(const struct Statement *)arg1;
- (struct HandleStatement *)getRawHandleStatement;
- (id)initWithHandle:(struct HandleStatement *)arg1 andTag:(id)arg2;

@end

