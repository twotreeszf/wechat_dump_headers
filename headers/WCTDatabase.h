//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "WCTConvenient-Protocol.h"
#import "WCTCrossTableChainCallProtocol-Protocol.h"
#import "WCTTransactionProtocol-Protocol.h"

@class NSString;

@interface WCTDatabase : NSObject <WCTTransactionProtocol, WCTConvenient, WCTCrossTableChainCallProtocol>
{
    struct Recyclable<WCDB::Database *> _databaseHolder;
    _Bool m_isInMemory;
    // Error parsing type: ^{Database=^^?{ThreadedErrors={ThreadLocal<WCDB::Error>=I{Error=ii{StringView=^^?*Q{shared_ptr<const std::__1::basic_string<char>>=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>}^{__shared_weak_count}}}{StringViewMap<WCDB::Error::InfoValue>={__tree<std::__1::__value_type<WCDB::StringView, WCDB::Error::InfoValue>, std::__1::__map_value_compare<WCDB::StringView, std::__1::__value_type<WCDB::StringView, WCDB::Error::InfoValue>, WCDB::StringViewComparator, true>, std::__1::allocator<std::__1::__value_type<WCDB::StringView, WCDB::Error::InfoValue>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<WCDB::StringView, WCDB::Error::InfoValue>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<WCDB::StringView, std::__1::__value_type<WCDB::StringView, WCDB::Error::InfoValue>, WCDB::StringViewComparator, true>>=Q}}}}}}{StringView=^^?*Q{shared_ptr<const std::__1::basic_string<char>>=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>}^{__shared_weak_count}}}{SharedLock={mutex={_opaque_pthread_mutex_t=q[56c]}}{Conditional={_opaque_pthread_cond_t=q[40c]}}{Conditional={_opaque_pthread_cond_t=q[40c]}}iii{queue<WCDB::Thread, std::__1::deque<WCDB::Thread, std::__1::allocator<WCDB::Thread>>>={deque<WCDB::Thread, std::__1::allocator<WCDB::Thread>>={__split_buffer<WCDB::Thread *, std::__1::allocator<WCDB::Thread *>>=^^{Thread}^^{Thread}^^{Thread}{__compressed_pair<WCDB::Thread **, std::__1::allocator<WCDB::Thread *>>=^^{Thread}}}Q{__compressed_pair<unsigned long, std::__1::allocator<WCDB::Thread>>=Q}}}{Thread=^^?^{_opaque_pthread_t}}{ThreadLocal<int>=Ii}}{SharedLock={mutex={_opaque_pthread_mutex_t=q[56c]}}{Conditional={_opaque_pthread_cond_t=q[40c]}}{Conditional={_opaque_pthread_cond_t=q[40c]}}iii{queue<WCDB::Thread, std::__1::deque<WCDB::Thread, std::__1::allocator<WCDB::Thread>>>={deque<WCDB::Thread, std::__1::allocator<WCDB::Thread>>={__split_buffer<WCDB::Thread *, std::__1::allocator<WCDB::Thread *>>=^^{Thread}^^{Thread}^^{Thread}{__compressed_pair<WCDB::Thread **, std::__1::allocator<WCDB::Thread *>>=^^{Thread}}}Q{__compressed_pair<unsigned long, std::__1::allocator<WCDB::Thread>>=Q}}}{Thread=^^?^{_opaque_pthread_t}}{ThreadLocal<int>=Ii}}{array<std::__1::set<std::__1::shared_ptr<WCDB::Handle>, std::__1::less<std::__1::shared_ptr<WCDB::Handle>>, std::__1::allocator<std::__1::shared_ptr<WCDB::Handle>>>, 5>=[5{set<std::__1::shared_ptr<WCDB::Handle>, std::__1::less<std::__1::shared_ptr<WCDB::Handle>>, std::__1::allocator<std::__1::shared_ptr<WCDB::Handle>>>={__tree<std::__1::shared_ptr<WCDB::Handle>, std::__1::less<std::__1::shared_ptr<WCDB::Handle>>, std::__1::allocator<std::__1::shared_ptr<WCDB::Handle>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::shared_ptr<WCDB::Handle>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<WCDB::Handle>>>=Q}}}]}{array<std::__1::list<std::__1::shared_ptr<WCDB::Handle>, std::__1::allocator<std::__1::shared_ptr<WCDB::Handle>>>, 5>=[5{list<std::__1::shared_ptr<WCDB::Handle>, std::__1::allocator<std::__1::shared_ptr<WCDB::Handle>>>={__list_node_base<std::__1::shared_ptr<WCDB::Handle>, void *>=^{__list_node_base<std::__1::shared_ptr<WCDB::Handle>, void *>}^{__list_node_base<std::__1::shared_ptr<WCDB::Handle>, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<WCDB::Handle>, void *>>>=Q}}]}{ThreadLocal<std::__1::array<WCDB::HandlePool::ReferencedHandle, 8>>=I{array<WCDB::HandlePool::ReferencedHandle, 8>=[8{ReferencedHandle={shared_ptr<WCDB::Handle>=^{Handle}^{__shared_weak_count}}i}]}}^^?^^?B{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int>>=Ai}}{Tag=i}{Configs=^^?{__list_node_base<WCDB::UniqueListElement<WCDB::StringView, std::__1::shared_ptr<WCDB::Config>, int>, void *>=^{__list_node_base<WCDB::UniqueListElement<WCDB::StringView, std::__1::shared_ptr<WCDB::Config>, int>, void *>}^{__list_node_base<WCDB::UniqueListElement<WCDB::StringView, std::__1::shared_ptr<WCDB::Config>, int>, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<WCDB::UniqueListElement<WCDB::StringView, std::__1::shared_ptr<WCDB::Config>, int>, void *>>>=Q}}{ThreadLocal<WCDB::RecyclableHandle>=I{RecyclableHandle=^^?{shared_ptr<std::__1::atomic<int>>=^{atomic<int>}^{__shared_weak_count}}{shared_ptr<WCDB::Handle>=^{Handle}^{__shared_weak_count}}{function<void (std::__1::shared_ptr<WCDB::Handle> &)>={__value_func<void (std::__1::shared_ptr<WCDB::Handle> &)>={type=[24C]}^{__base<void (std::__1::shared_ptr<WCDB::Handle> &)>}}}^{Handle}}}{Factory={StringView=^^?*Q{shared_ptr<const std::__1::basic_string<char>>=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>}^{__shared_weak_count}}}{StringView=^^?*Q{shared_ptr<const std::__1::basic_string<char>>=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>}^{__shared_weak_count}}}{function<bool (const WCDB::UnsafeStringView &)>={__value_func<bool (const WCDB::UnsafeStringView &)>={type=[24C]}^{__base<bool (const WCDB::UnsafeStringView &)>}}}}{Migration={set<const WCDB::MigrationInfo *, std::__1::less<const WCDB::MigrationInfo *>, std::__1::allocator<const WCDB::MigrationInfo *>>={__tree<const WCDB::MigrationInfo *, std::__1::less<const WCDB::MigrationInfo *>, std::__1::allocator<const WCDB::MigrationInfo *>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<const WCDB::MigrationInfo *, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<const WCDB::MigrationInfo *>>=Q}}}{set<const WCDB::MigrationInfo *, std::__1::less<const WCDB::MigrationInfo *>, std::__1::allocator<const WCDB::MigrationInfo *>>={__tree<const WCDB::MigrationInfo *, std::__1::less<const WCDB::MigrationInfo *>, std::__1::allocator<const WCDB::MigrationInfo *>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<const WCDB::MigrationInfo *, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<const WCDB::MigrationInfo *>>=Q}}}{map<const WCDB::MigrationInfo *, int, std::__1::less<const WCDB::MigrationInfo *>, std::__1::allocator<std::__1::pair<const WCDB::MigrationInfo *const, int>>>={__tree<std::__1::__value_type<const WCDB::MigrationInfo *, int>, std::__1::__map_value_compare<const WCDB::MigrationInfo *, std::__1::__value_type<const WCDB::MigrationInfo *, int>, std::__1::less<const WCDB::MigrationInfo *>, true>, std::__1::allocator<std::__1::__value_type<const WCDB::MigrationInfo *, int>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const WCDB::MigrationInfo *, int>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<const WCDB::MigrationInfo *, std::__1::__value_type<const WCDB::MigrationInfo *, int>, std::__1::less<const WCDB::MigrationInfo *>, true>>=Q}}}{list<WCDB::MigrationInfo, std::__1::allocator<WCDB::MigrationInfo>>={__list_node_base<WCDB::MigrationInfo, void *>=^{__list_node_base<WCDB::MigrationInfo, void *>}^{__list_node_base<WCDB::MigrationInfo, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<WCDB::MigrationInfo, void *>>>=Q}}{StringViewMap<const WCDB::MigrationInfo *>={__tree<std::__1::__value_type<WCDB::StringView, const WCDB::MigrationInfo *>, std::__1::__map_value_compare<WCDB::StringView, std::__1::__value_type<WCDB::StringView, const WCDB::MigrationInfo *>, WCDB::StringViewComparator, true>, std::__1::allocator<std::__1::__value_type<WCDB::StringView, const WCDB::MigrationInfo *>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<WCDB::StringView, const WCDB::MigrationInfo *>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<WCDB::StringView, std::__1::__value_type<WCDB::StringView, const WCDB::MigrationInfo *>, WCDB::StringViewComparator, true>>=Q}}}{StringViewSet={__tree<WCDB::StringView, WCDB::StringViewComparator, std::__1::allocator<WCDB::StringView>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<WCDB::StringView, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, WCDB::StringViewComparator>=Q}}}{SharedLock={mutex={_opaque_pthread_mutex_t=q[56c]}}{Conditional={_opaque_pthread_cond_t=q[40c]}}{Conditional={_opaque_pthread_cond_t=q[40c]}}iii{queue<WCDB::Thread, std::__1::deque<WCDB::Thread, std::__1::allocator<WCDB::Thread>>>={deque<WCDB::Thread, std::__1::allocator<WCDB::Thread>>={__split_buffer<WCDB::Thread *, std::__1::allocator<WCDB::Thread *>>=^^{Thread}^^{Thread}^^{Thread}{__compressed_pair<WCDB::Thread **, std::__1::allocator<WCDB::Thread *>>=^^{Thread}}}Q{__compressed_pair<unsigned long, std::__1::allocator<WCDB::Thread>>=Q}}}{Thread=^^?^{_opaque_pthread_t}}{ThreadLocal<int>=Ii}}{function<void (WCDB::MigrationUserInfo &)>={__value_func<void (WCDB::MigrationUserInfo &)>={type=[24C]}^{__base<void (WCDB::MigrationUserInfo &)>}}}BB^{MigrationEvent}}{function<void (WCDB::Database *, const WCDB::MigrationBaseInfo *)>={__value_func<void (WCDB::Database *, const WCDB::MigrationBaseInfo *)>={type=[24C]}^{__base<void (WCDB::Database *, const WCDB::MigrationBaseInfo *)>}}}B{shared_ptr<WCDB::Handle>=^{Handle}^{__shared_weak_count}}{MergeFTSIndexLogic=^{MergeFTSIndexHandleProvider}B{atomic<bool>={__cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool>>=AB}}{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int>>=Ai}}{SharedLock={mutex={_opaque_pthread_mutex_t=q[56c]}}{Conditional={_opaque_pthread_cond_t=q[40c]}}{Conditional={_opaque_pthread_cond_t=q[40c]}}iii{queue<WCDB::Thread, std::__1::deque<WCDB::Thread, std::__1::allocator<WCDB::Thread>>>={deque<WCDB::Thread, std::__1::allocator<WCDB::Thread>>={__split_buffer<WCDB::Thread *, std::__1::allocator<WCDB::Thread *>>=^^{Thread}^^{Thread}^^{Thread}{__compressed_pair<WCDB::Thread **, std::__1::allocator<WCDB::Thread *>>=^^{Thread}}}Q{__compressed_pair<unsigned long, std::__1::allocator<WCDB::Thread>>=Q}}}{Thread=^^?^{_opaque_pthread_t}}{ThreadLocal<int>=Ii}}{Statement=^^?{Shadow<WCDB::Syntax::Identifier>={unique_ptr<WCDB::Syntax::Identifier, std::__1::default_delete<WCDB::Syntax::Identifier>>={__compressed_pair<WCDB::Syntax::Identifier *, std::__1::default_delete<WCDB::Syntax::Identifier>>=^{Identifier}}}}{shared_ptr<WCDB::StringView>=^{StringView}^{__shared_weak_count}}}{set<WCDB::StringView, std::__1::less<WCDB::StringView>, std::__1::allocator<WCDB::StringView>>={__tree<WCDB::StringView, std::__1::less<WCDB::StringView>, std::__1::allocator<WCDB::StringView>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<WCDB::StringView, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<WCDB::StringView>>=Q}}}{set<WCDB::StringView, std::__1::less<WCDB::StringView>, std::__1::allocator<WCDB::StringView>>={__tree<WCDB::StringView, std::__1::less<WCDB::StringView>, std::__1::allocator<WCDB::StringView>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<WCDB::StringView, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<WCDB::StringView>>=Q}}}}}, name: _database
}

+ (id)databaseWithRouterInfo:(id)arg1;
+ (void)swizzleInitWithPath;
+ (void)swizzleSetTag;
+ (void)load;
+ (id)keyValueTableName;
+ (void)simulateIOError:(unsigned long long)arg1;
+ (void)purgeAll;
+ (_Bool)setDefaultTemporaryDatabaseFileDirectory:(id)arg1;
+ (void)globalTraceSQL:(CDUnknownBlockType)arg1;
+ (void)globalTracePerformance:(CDUnknownBlockType)arg1;
+ (void)globalTraceError:(CDUnknownBlockType)arg1;
+ (id)sourceId;
+ (id)version;
+ (void)registerTokenizer:(const struct TokenizerModule *)arg1 named:(id)arg2;
+ (id)getABTestConfigWithName:(id)arg1;
+ (void)removeABTestConfigWithName:(id)arg1;
+ (void)setABTestConfigWithName:(id)arg1 andValue:(id)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;
- (struct RecyclableHandle)generateHandle;
- (id)error;
- (void)close:(CDUnknownBlockType)arg1;
@property(readonly) NSString *path;
@property int tag;
- (void)dealloc;
- (id)initInMemoryDatabase;
- (id)initWithPath:(id)arg1;
-     // Error parsing type: @24@0:8^{Database=^^?{ThreadedErrors={ThreadLocal<WCDB::Error>=I{Error=ii{StringView=^^?*Q{shared_ptr<const std::__1::basic_string<char>>=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>}^{__shared_weak_count}}}{StringViewMap<WCDB::Error::InfoValue>={__tree<std::__1::__value_type<WCDB::StringView, WCDB::Error::InfoValue>, std::__1::__map_value_compare<WCDB::StringView, std::__1::__value_type<WCDB::StringView, WCDB::Error::InfoValue>, WCDB::StringViewComparator, true>, std::__1::allocator<std::__1::__value_type<WCDB::StringView, WCDB::Error::InfoValue>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<WCDB::StringView, WCDB::Error::InfoValue>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<WCDB::StringView, std::__1::__value_type<WCDB::StringView, WCDB::Error::InfoValue>, WCDB::StringViewComparator, true>>=Q}}}}}}{StringView=^^?*Q{shared_ptr<const std::__1::basic_string<char>>=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>}^{__shared_weak_count}}}{SharedLock={mutex={_opaque_pthread_mutex_t=q[56c]}}{Conditional={_opaque_pthread_cond_t=q[40c]}}{Conditional={_opaque_pthread_cond_t=q[40c]}}iii{queue<WCDB::Thread, std::__1::deque<WCDB::Thread, std::__1::allocator<WCDB::Thread>>>={deque<WCDB::Thread, std::__1::allocator<WCDB::Thread>>={__split_buffer<WCDB::Thread *, std::__1::allocator<WCDB::Thread *>>=^^{Thread}^^{Thread}^^{Thread}{__compressed_pair<WCDB::Thread **, std::__1::allocator<WCDB::Thread *>>=^^{Thread}}}Q{__compressed_pair<unsigned long, std::__1::allocator<WCDB::Thread>>=Q}}}{Thread=^^?^{_opaque_pthread_t}}{ThreadLocal<int>=Ii}}{SharedLock={mutex={_opaque_pthread_mutex_t=q[56c]}}{Conditional={_opaque_pthread_cond_t=q[40c]}}{Conditional={_opaque_pthread_cond_t=q[40c]}}iii{queue<WCDB::Thread, std::__1::deque<WCDB::Thread, std::__1::allocator<WCDB::Thread>>>={deque<WCDB::Thread, std::__1::allocator<WCDB::Thread>>={__split_buffer<WCDB::Thread *, std::__1::allocator<WCDB::Thread *>>=^^{Thread}^^{Thread}^^{Thread}{__compressed_pair<WCDB::Thread **, std::__1::allocator<WCDB::Thread *>>=^^{Thread}}}Q{__compressed_pair<unsigned long, std::__1::allocator<WCDB::Thread>>=Q}}}{Thread=^^?^{_opaque_pthread_t}}{ThreadLocal<int>=Ii}}{array<std::__1::set<std::__1::shared_ptr<WCDB::Handle>, std::__1::less<std::__1::shared_ptr<WCDB::Handle>>, std::__1::allocator<std::__1::shared_ptr<WCDB::Handle>>>, 5>=[5{set<std::__1::shared_ptr<WCDB::Handle>, std::__1::less<std::__1::shared_ptr<WCDB::Handle>>, std::__1::allocator<std::__1::shared_ptr<WCDB::Handle>>>={__tree<std::__1::shared_ptr<WCDB::Handle>, std::__1::less<std::__1::shared_ptr<WCDB::Handle>>, std::__1::allocator<std::__1::shared_ptr<WCDB::Handle>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::shared_ptr<WCDB::Handle>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<WCDB::Handle>>>=Q}}}]}{array<std::__1::list<std::__1::shared_ptr<WCDB::Handle>, std::__1::allocator<std::__1::shared_ptr<WCDB::Handle>>>, 5>=[5{list<std::__1::shared_ptr<WCDB::Handle>, std::__1::allocator<std::__1::shared_ptr<WCDB::Handle>>>={__list_node_base<std::__1::shared_ptr<WCDB::Handle>, void *>=^{__list_node_base<std::__1::shared_ptr<WCDB::Handle>, void *>}^{__list_node_base<std::__1::shared_ptr<WCDB::Handle>, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<WCDB::Handle>, void *>>>=Q}}]}{ThreadLocal<std::__1::array<WCDB::HandlePool::ReferencedHandle, 8>>=I{array<WCDB::HandlePool::ReferencedHandle, 8>=[8{ReferencedHandle={shared_ptr<WCDB::Handle>=^{Handle}^{__shared_weak_count}}i}]}}^^?^^?B{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int>>=Ai}}{Tag=i}{Configs=^^?{__list_node_base<WCDB::UniqueListElement<WCDB::StringView, std::__1::shared_ptr<WCDB::Config>, int>, void *>=^{__list_node_base<WCDB::UniqueListElement<WCDB::StringView, std::__1::shared_ptr<WCDB::Config>, int>, void *>}^{__list_node_base<WCDB::UniqueListElement<WCDB::StringView, std::__1::shared_ptr<WCDB::Config>, int>, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<WCDB::UniqueListElement<WCDB::StringView, std::__1::shared_ptr<WCDB::Config>, int>, void *>>>=Q}}{ThreadLocal<WCDB::RecyclableHandle>=I{RecyclableHandle=^^?{shared_ptr<std::__1::atomic<int>>=^{atomic<int>}^{__shared_weak_count}}{shared_ptr<WCDB::Handle>=^{Handle}^{__shared_weak_count}}{function<void (std::__1::shared_ptr<WCDB::Handle> &)>={__value_func<void (std::__1::shared_ptr<WCDB::Handle> &)>={type=[24C]}^{__base<void (std::__1::shared_ptr<WCDB::Handle> &)>}}}^{Handle}}}{Factory={StringView=^^?*Q{shared_ptr<const std::__1::basic_string<char>>=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>}^{__shared_weak_count}}}{StringView=^^?*Q{shared_ptr<const std::__1::basic_string<char>>=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>}^{__shared_weak_count}}}{function<bool (const WCDB::UnsafeStringView &)>={__value_func<bool (const WCDB::UnsafeStringView &)>={type=[24C]}^{__base<bool (const WCDB::UnsafeStringView &)>}}}}{Migration={set<const WCDB::MigrationInfo *, std::__1::less<const WCDB::MigrationInfo *>, std::__1::allocator<const WCDB::MigrationInfo *>>={__tree<const WCDB::MigrationInfo *, std::__1::less<const WCDB::MigrationInfo *>, std::__1::allocator<const WCDB::MigrationInfo *>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<const WCDB::MigrationInfo *, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<const WCDB::MigrationInfo *>>=Q}}}{set<const WCDB::MigrationInfo *, std::__1::less<const WCDB::MigrationInfo *>, std::__1::allocator<const WCDB::MigrationInfo *>>={__tree<const WCDB::MigrationInfo *, std::__1::less<const WCDB::MigrationInfo *>, std::__1::allocator<const WCDB::MigrationInfo *>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<const WCDB::MigrationInfo *, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<const WCDB::MigrationInfo *>>=Q}}}{map<const WCDB::MigrationInfo *, int, std::__1::less<const WCDB::MigrationInfo *>, std::__1::allocator<std::__1::pair<const WCDB::MigrationInfo *const, int>>>={__tree<std::__1::__value_type<const WCDB::MigrationInfo *, int>, std::__1::__map_value_compare<const WCDB::MigrationInfo *, std::__1::__value_type<const WCDB::MigrationInfo *, int>, std::__1::less<const WCDB::MigrationInfo *>, true>, std::__1::allocator<std::__1::__value_type<const WCDB::MigrationInfo *, int>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const WCDB::MigrationInfo *, int>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<const WCDB::MigrationInfo *, std::__1::__value_type<const WCDB::MigrationInfo *, int>, std::__1::less<const WCDB::MigrationInfo *>, true>>=Q}}}{list<WCDB::MigrationInfo, std::__1::allocator<WCDB::MigrationInfo>>={__list_node_base<WCDB::MigrationInfo, void *>=^{__list_node_base<WCDB::MigrationInfo, void *>}^{__list_node_base<WCDB::MigrationInfo, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<WCDB::MigrationInfo, void *>>>=Q}}{StringViewMap<const WCDB::MigrationInfo *>={__tree<std::__1::__value_type<WCDB::StringView, const WCDB::MigrationInfo *>, std::__1::__map_value_compare<WCDB::StringView, std::__1::__value_type<WCDB::StringView, const WCDB::MigrationInfo *>, WCDB::StringViewComparator, true>, std::__1::allocator<std::__1::__value_type<WCDB::StringView, const WCDB::MigrationInfo *>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<WCDB::StringView, const WCDB::MigrationInfo *>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<WCDB::StringView, std::__1::__value_type<WCDB::StringView, const WCDB::MigrationInfo *>, WCDB::StringViewComparator, true>>=Q}}}{StringViewSet={__tree<WCDB::StringView, WCDB::StringViewComparator, std::__1::allocator<WCDB::StringView>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<WCDB::StringView, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, WCDB::StringViewComparator>=Q}}}{SharedLock={mutex={_opaque_pthread_mutex_t=q[56c]}}{Conditional={_opaque_pthread_cond_t=q[40c]}}{Conditional={_opaque_pthread_cond_t=q[40c]}}iii{queue<WCDB::Thread, std::__1::deque<WCDB::Thread, std::__1::allocator<WCDB::Thread>>>={deque<WCDB::Thread, std::__1::allocator<WCDB::Thread>>={__split_buffer<WCDB::Thread *, std::__1::allocator<WCDB::Thread *>>=^^{Thread}^^{Thread}^^{Thread}{__compressed_pair<WCDB::Thread **, std::__1::allocator<WCDB::Thread *>>=^^{Thread}}}Q{__compressed_pair<unsigned long, std::__1::allocator<WCDB::Thread>>=Q}}}{Thread=^^?^{_opaque_pthread_t}}{ThreadLocal<int>=Ii}}{function<void (WCDB::MigrationUserInfo &)>={__value_func<void (WCDB::MigrationUserInfo &)>={type=[24C]}^{__base<void (WCDB::MigrationUserInfo &)>}}}BB^{MigrationEvent}}{function<void (WCDB::Database *, const WCDB::MigrationBaseInfo *)>={__value_func<void (WCDB::Database *, const WCDB::MigrationBaseInfo *)>={type=[24C]}^{__base<void (WCDB::Database *, const WCDB::MigrationBaseInfo *)>}}}B{shared_ptr<WCDB::Handle>=^{Handle}^{__shared_weak_count}}{MergeFTSIndexLogic=^{MergeFTSIndexHandleProvider}B{atomic<bool>={__cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool>>=AB}}{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int>>=Ai}}{SharedLock={mutex={_opaque_pthread_mutex_t=q[56c]}}{Conditional={_opaque_pthread_cond_t=q[40c]}}{Conditional={_opaque_pthread_cond_t=q[40c]}}iii{queue<WCDB::Thread, std::__1::deque<WCDB::Thread, std::__1::allocator<WCDB::Thread>>>={deque<WCDB::Thread, std::__1::allocator<WCDB::Thread>>={__split_buffer<WCDB::Thread *, std::__1::allocator<WCDB::Thread *>>=^^{Thread}^^{Thread}^^{Thread}{__compressed_pair<WCDB::Thread **, std::__1::allocator<WCDB::Thread *>>=^^{Thread}}}Q{__compressed_pair<unsigned long, std::__1::allocator<WCDB::Thread>>=Q}}}{Thread=^^?^{_opaque_pthread_t}}{ThreadLocal<int>=Ii}}{Statement=^^?{Shadow<WCDB::Syntax::Identifier>={unique_ptr<WCDB::Syntax::Identifier, std::__1::default_delete<WCDB::Syntax::Identifier>>={__compressed_pair<WCDB::Syntax::Identifier *, std::__1::default_delete<WCDB::Syntax::Identifier>>=^{Identifier}}}}{shared_ptr<WCDB::StringView>=^{StringView}^{__shared_weak_count}}}{set<WCDB::StringView, std::__1::less<WCDB::StringView>, std::__1::allocator<WCDB::StringView>>={__tree<WCDB::StringView, std::__1::less<WCDB::StringView>, std::__1::allocator<WCDB::StringView>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<WCDB::StringView, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<WCDB::StringView>>=Q}}}{set<WCDB::StringView, std::__1::less<WCDB::StringView>, std::__1::allocator<WCDB::StringView>>={__tree<WCDB::StringView, std::__1::less<WCDB::StringView>, std::__1::allocator<WCDB::StringView>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<WCDB::StringView, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<WCDB::StringView>>=Q}}}}}16, name: initWithUnsafeDatabase:
- (_Bool)lazyRunTransaction:(CDUnknownBlockType)arg1;
- (void)enablePerformanceTrace:(_Bool)arg1;
- (void)enableSQLTrace:(_Bool)arg1;
- (void)enableSecureDelete;
- (_Bool)__swift_dropTable:(id)arg1 error:(id *)arg2;
- (id)__swift_getTable:(id)arg1 withClass:(Class)arg2;
- (_Bool)__swift_createTable:(id)arg1 withClass:(Class)arg2 error:(id *)arg3;
- (void)enableAutoRecovering;
- (void)showFileInfo;
- (void)showUsageForTable:(id)arg1;
- (void)showUsage;
- (id)getFileDescription:(id)arg1 ofRoot:(id)arg2;
- (id)getObjectForKey:(id)arg1 withClass:(Class)arg2;
- (_Bool)setObject:(id)arg1 forKey:(id)arg2;
- (_Bool)createKeyValueTable;
- (_Bool)runNestedTransaction:(CDUnknownBlockType)arg1;
- (void)rollbackNestedTransaction;
- (_Bool)commitOrRollbackNestedTransaction;
- (_Bool)beginNestedTransaction;
- (_Bool)runPauseableTransactionWithOneLoop:(CDUnknownBlockType)arg1;
- (_Bool)runTransaction:(CDUnknownBlockType)arg1;
- (void)rollbackTransaction;
- (_Bool)commitOrRollbackTransaction;
- (_Bool)beginTransaction;
- (_Bool)isInTransaction;
- (_Bool)dropIndex:(id)arg1;
- (_Bool)dropTable:(id)arg1;
- (_Bool)createVirtualTable:(id)arg1 withClass:(Class)arg2;
- (id)getTable:(id)arg1 withClass:(Class)arg2;
- (_Bool)createTable:(id)arg1 withClass:(Class)arg2;
- (struct WCTOptionalBool)tableExists:(id)arg1;
- (void)unblockade;
- (void)blockade;
- (_Bool)isBlockaded;
- (void)close;
- (_Bool)canOpen;
- (_Bool)isOpened;
- (void)enableAutoCheckpoint:(_Bool)arg1;
- (void)purge;
- (struct WCTOptionalSize)getFilesSize;
- (id)paths;
- (_Bool)moveFilesToDirectory:(id)arg1;
- (_Bool)removeFiles;
- (void)traceSQL:(CDUnknownBlockType)arg1;
- (void)tracePerformance:(CDUnknownBlockType)arg1;
- (void)addTokenizer:(id)arg1;
- (void)enableAutoMergeFTS5Index:(_Bool)arg1;
- (id)getRowsFromStatement:(const struct Statement *)arg1;
- (id)getColumnFromStatement:(const struct Statement *)arg1;
- (id)getRowFromStatement:(const struct Statement *)arg1;
- (id)getValueFromStatement:(const struct Statement *)arg1;
- (id)getRowsOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4 limit:(const struct Expression *)arg5 offset:(const struct Expression *)arg6;
- (id)getRowsOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 limit:(const struct Expression *)arg4 offset:(const struct Expression *)arg5;
- (id)getRowsOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3 limit:(const struct Expression *)arg4 offset:(const struct Expression *)arg5;
- (id)getRowsOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4 limit:(const struct Expression *)arg5;
- (id)getRowsOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 limit:(const struct Expression *)arg3 offset:(const struct Expression *)arg4;
- (id)getRowsOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3 limit:(const struct Expression *)arg4;
- (id)getRowsOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 limit:(const struct Expression *)arg4;
- (id)getRowsOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4;
- (id)getRowsOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 limit:(const struct Expression *)arg3;
- (id)getRowsOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3;
- (id)getRowsOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3;
- (id)getRowsOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2;
- (id)getColumnOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4 limit:(const struct Expression *)arg5 offset:(const struct Expression *)arg6;
- (id)getColumnOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 limit:(const struct Expression *)arg4 offset:(const struct Expression *)arg5;
- (id)getColumnOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3 limit:(const struct Expression *)arg4 offset:(const struct Expression *)arg5;
- (id)getColumnOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4 limit:(const struct Expression *)arg5;
- (id)getColumnOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 limit:(const struct Expression *)arg3 offset:(const struct Expression *)arg4;
- (id)getColumnOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3 limit:(const struct Expression *)arg4;
- (id)getColumnOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 limit:(const struct Expression *)arg4;
- (id)getColumnOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4;
- (id)getColumnOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 limit:(const struct Expression *)arg3;
- (id)getColumnOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3;
- (id)getColumnOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3;
- (id)getColumnOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2;
- (id)getRowOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4 offset:(const struct Expression *)arg5;
- (id)getRowOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3 offset:(const struct Expression *)arg4;
- (id)getRowOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 offset:(const struct Expression *)arg4;
- (id)getRowOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4;
- (id)getRowOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 offset:(const struct Expression *)arg3;
- (id)getRowOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3;
- (id)getRowOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3;
- (id)getRowOnResultColumns:(const SyntaxList_cba58f96 *)arg1 fromTable:(id)arg2;
- (id)getValueOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4 offset:(const struct Expression *)arg5;
- (id)getValueOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3 offset:(const struct Expression *)arg4;
- (id)getValueOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 offset:(const struct Expression *)arg4;
- (id)getValueOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4;
- (id)getValueOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 offset:(const struct Expression *)arg3;
- (id)getValueOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3;
- (id)getValueOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3;
- (id)getValueOnResultColumn:(const struct ResultColumn *)arg1 fromTable:(id)arg2;
- (_Bool)deleteFromTable:(id)arg1 where:(const struct Expression *)arg2 orders:(const SyntaxList_64caf671 *)arg3 limit:(const struct Expression *)arg4 offset:(const struct Expression *)arg5;
- (_Bool)deleteFromTable:(id)arg1 orders:(const SyntaxList_64caf671 *)arg2 limit:(const struct Expression *)arg3 offset:(const struct Expression *)arg4;
- (_Bool)deleteFromTable:(id)arg1 where:(const struct Expression *)arg2 limit:(const struct Expression *)arg3 offset:(const struct Expression *)arg4;
- (_Bool)deleteFromTable:(id)arg1 where:(const struct Expression *)arg2 orders:(const SyntaxList_64caf671 *)arg3 limit:(const struct Expression *)arg4;
- (_Bool)deleteFromTable:(id)arg1 limit:(const struct Expression *)arg2 offset:(const struct Expression *)arg3;
- (_Bool)deleteFromTable:(id)arg1 orders:(const SyntaxList_64caf671 *)arg2 limit:(const struct Expression *)arg3;
- (_Bool)deleteFromTable:(id)arg1 where:(const struct Expression *)arg2 limit:(const struct Expression *)arg3;
- (_Bool)deleteFromTable:(id)arg1 limit:(const struct Expression *)arg2;
- (_Bool)deleteFromTable:(id)arg1 where:(const struct Expression *)arg2;
- (_Bool)deleteFromTable:(id)arg1;
- (_Bool)updateTable:(id)arg1 setProperty:(const struct WCTProperty *)arg2 toValue:(id)arg3 where:(const struct Expression *)arg4 orders:(const SyntaxList_64caf671 *)arg5 limit:(const struct Expression *)arg6 offset:(const struct Expression *)arg7;
- (_Bool)updateTable:(id)arg1 setProperty:(const struct WCTProperty *)arg2 toValue:(id)arg3 orders:(const SyntaxList_64caf671 *)arg4 limit:(const struct Expression *)arg5 offset:(const struct Expression *)arg6;
- (_Bool)updateTable:(id)arg1 setProperty:(const struct WCTProperty *)arg2 toValue:(id)arg3 where:(const struct Expression *)arg4 limit:(const struct Expression *)arg5 offset:(const struct Expression *)arg6;
- (_Bool)updateTable:(id)arg1 setProperty:(const struct WCTProperty *)arg2 toValue:(id)arg3 where:(const struct Expression *)arg4 orders:(const SyntaxList_64caf671 *)arg5 limit:(const struct Expression *)arg6;
- (_Bool)updateTable:(id)arg1 setProperty:(const struct WCTProperty *)arg2 toValue:(id)arg3 limit:(const struct Expression *)arg4 offset:(const struct Expression *)arg5;
- (_Bool)updateTable:(id)arg1 setProperty:(const struct WCTProperty *)arg2 toValue:(id)arg3 orders:(const SyntaxList_64caf671 *)arg4 limit:(const struct Expression *)arg5;
- (_Bool)updateTable:(id)arg1 setProperty:(const struct WCTProperty *)arg2 toValue:(id)arg3 where:(const struct Expression *)arg4 limit:(const struct Expression *)arg5;
- (_Bool)updateTable:(id)arg1 setProperty:(const struct WCTProperty *)arg2 toValue:(id)arg3 limit:(const struct Expression *)arg4;
- (_Bool)updateTable:(id)arg1 setProperty:(const struct WCTProperty *)arg2 toValue:(id)arg3 where:(const struct Expression *)arg4;
- (_Bool)updateTable:(id)arg1 setProperty:(const struct WCTProperty *)arg2 toValue:(id)arg3;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toRow:(id)arg3 where:(const struct Expression *)arg4 orders:(const SyntaxList_64caf671 *)arg5 limit:(const struct Expression *)arg6 offset:(const struct Expression *)arg7;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toRow:(id)arg3 orders:(const SyntaxList_64caf671 *)arg4 limit:(const struct Expression *)arg5 offset:(const struct Expression *)arg6;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toRow:(id)arg3 where:(const struct Expression *)arg4 limit:(const struct Expression *)arg5 offset:(const struct Expression *)arg6;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toRow:(id)arg3 where:(const struct Expression *)arg4 orders:(const SyntaxList_64caf671 *)arg5 limit:(const struct Expression *)arg6;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toRow:(id)arg3 limit:(const struct Expression *)arg4 offset:(const struct Expression *)arg5;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toRow:(id)arg3 orders:(const SyntaxList_64caf671 *)arg4 limit:(const struct Expression *)arg5;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toRow:(id)arg3 where:(const struct Expression *)arg4 limit:(const struct Expression *)arg5;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toRow:(id)arg3 limit:(const struct Expression *)arg4;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toRow:(id)arg3 where:(const struct Expression *)arg4;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toRow:(id)arg3;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toObject:(id)arg3 where:(const struct Expression *)arg4 orders:(const SyntaxList_64caf671 *)arg5 limit:(const struct Expression *)arg6 offset:(const struct Expression *)arg7;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toObject:(id)arg3 orders:(const SyntaxList_64caf671 *)arg4 limit:(const struct Expression *)arg5 offset:(const struct Expression *)arg6;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toObject:(id)arg3 where:(const struct Expression *)arg4 limit:(const struct Expression *)arg5 offset:(const struct Expression *)arg6;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toObject:(id)arg3 where:(const struct Expression *)arg4 orders:(const SyntaxList_64caf671 *)arg5 limit:(const struct Expression *)arg6;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toObject:(id)arg3 limit:(const struct Expression *)arg4 offset:(const struct Expression *)arg5;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toObject:(id)arg3 orders:(const SyntaxList_64caf671 *)arg4 limit:(const struct Expression *)arg5;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toObject:(id)arg3 where:(const struct Expression *)arg4 limit:(const struct Expression *)arg5;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toObject:(id)arg3 limit:(const struct Expression *)arg4;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toObject:(id)arg3 where:(const struct Expression *)arg4;
- (_Bool)updateTable:(id)arg1 setProperties:(const SyntaxList_7f15fe8c *)arg2 toObject:(id)arg3;
- (_Bool)insertOrReplaceObjects:(id)arg1 onProperties:(const SyntaxList_7f15fe8c *)arg2 intoTable:(id)arg3;
- (_Bool)insertOrReplaceObject:(id)arg1 onProperties:(const SyntaxList_7f15fe8c *)arg2 intoTable:(id)arg3;
- (_Bool)insertObjects:(id)arg1 onProperties:(const SyntaxList_7f15fe8c *)arg2 intoTable:(id)arg3;
- (_Bool)insertObject:(id)arg1 onProperties:(const SyntaxList_7f15fe8c *)arg2 intoTable:(id)arg3;
- (_Bool)insertOrReplaceObjects:(id)arg1 intoTable:(id)arg2;
- (_Bool)insertOrReplaceObject:(id)arg1 intoTable:(id)arg2;
- (_Bool)insertObjects:(id)arg1 intoTable:(id)arg2;
- (_Bool)insertObject:(id)arg1 intoTable:(id)arg2;
- (id)getObjectsOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4 limit:(const struct Expression *)arg5 offset:(const struct Expression *)arg6;
- (id)getObjectsOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3 limit:(const struct Expression *)arg4 offset:(const struct Expression *)arg5;
- (id)getObjectsOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 limit:(const struct Expression *)arg4 offset:(const struct Expression *)arg5;
- (id)getObjectsOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4 limit:(const struct Expression *)arg5;
- (id)getObjectsOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 limit:(const struct Expression *)arg3 offset:(const struct Expression *)arg4;
- (id)getObjectsOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3 limit:(const struct Expression *)arg4;
- (id)getObjectsOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 limit:(const struct Expression *)arg4;
- (id)getObjectsOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4;
- (id)getObjectsOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 limit:(const struct Expression *)arg3;
- (id)getObjectsOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3;
- (id)getObjectsOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3;
- (id)getObjectsOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2;
- (id)getObjectOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4 offset:(const struct Expression *)arg5;
- (id)getObjectOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3 offset:(const struct Expression *)arg4;
- (id)getObjectOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 offset:(const struct Expression *)arg4;
- (id)getObjectOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4;
- (id)getObjectOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 offset:(const struct Expression *)arg3;
- (id)getObjectOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3;
- (id)getObjectOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3;
- (id)getObjectOnResultColumns:(const SyntaxList_d92903c3 *)arg1 fromTable:(id)arg2;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4 limit:(const struct Expression *)arg5 offset:(const struct Expression *)arg6;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 limit:(const struct Expression *)arg4 offset:(const struct Expression *)arg5;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3 limit:(const struct Expression *)arg4 offset:(const struct Expression *)arg5;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4 limit:(const struct Expression *)arg5;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 limit:(const struct Expression *)arg3 offset:(const struct Expression *)arg4;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3 limit:(const struct Expression *)arg4;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 limit:(const struct Expression *)arg4;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 limit:(const struct Expression *)arg3;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2;
- (id)getObjectOfClass:(Class)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4 offset:(const struct Expression *)arg5;
- (id)getObjectOfClass:(Class)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3 offset:(const struct Expression *)arg4;
- (id)getObjectOfClass:(Class)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 offset:(const struct Expression *)arg4;
- (id)getObjectOfClass:(Class)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3 orders:(const SyntaxList_64caf671 *)arg4;
- (id)getObjectOfClass:(Class)arg1 fromTable:(id)arg2 offset:(const struct Expression *)arg3;
- (id)getObjectOfClass:(Class)arg1 fromTable:(id)arg2 orders:(const SyntaxList_64caf671 *)arg3;
- (id)getObjectOfClass:(Class)arg1 fromTable:(id)arg2 where:(const struct Expression *)arg3;
- (id)getObjectOfClass:(Class)arg1 fromTable:(id)arg2;
- (_Bool)rawExecute:(id)arg1;
- (_Bool)execute:(const struct Statement *)arg1;
- (id)getHandle;
- (_Bool)isMigrated;
- (void)setNotificationWhenMigrated:(CDUnknownBlockType)arg1;
- (void)enableAutoMigration:(_Bool)arg1;
- (_Bool)stepMigration;
- (void)filterMigration:(CDUnknownBlockType)arg1;
- (void)removeConfigForName:(id)arg1;
- (void)setConfig:(CDUnknownBlockType)arg1 withUninvocation:(CDUnknownBlockType)arg2 forName:(id)arg3;
- (void)setConfig:(CDUnknownBlockType)arg1 withUninvocation:(CDUnknownBlockType)arg2 forName:(id)arg3 withPriority:(int)arg4;
- (void)setCipherKey:(id)arg1 andCipherPageSize:(int)arg2;
- (void)setCipherKey:(id)arg1;
- (_Bool)containsDeposited;
- (_Bool)removeDeposited;
- (double)retrieve:(CDUnknownBlockType)arg1;
- (_Bool)backup;
- (void)enableAutoBackup:(_Bool)arg1;
- (_Bool)deposit;
- (void)filterBackup:(CDUnknownBlockType)arg1;
- (_Bool)isAlreadyCorrupted;
- (_Bool)checkIfCorrupted;
- (void)setNotificationWhenCorrupted:(CDUnknownBlockType)arg1;
- (id)prepareMultiSelect;
- (id)prepareSelect;
- (id)prepareUpdate;
- (id)prepareDelete;
- (id)prepareInsert;

@end

