//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableDictionary, NSRecursiveLock, NSString;

@interface MemoryMappedKV : NSObject
{
    NSRecursiveLock *m_lock;
    NSMutableDictionary *m_dic;
    struct unordered_map<NSString *, KeyValueHolder, KeyHasher, KeyEqualer, std::__1::allocator<std::__1::pair<NSString *const, KeyValueHolder>>> *m_plainDic;
    NSString *m_path;
    NSString *m_crcPath;
    NSString *m_mmapID;
    struct MemoryFile *m_file;
    unsigned long long m_actualSize;
    struct CodedOutputData *m_output;
    struct AESCrypt *m_cryptor;
    _Bool m_needLoadFromFile;
    _Bool m_isFirstCreated;
    unsigned int m_crcDigest;
    struct MMKVMetaInfo m_metaInfo;
    struct MemoryFile *m_metaFile;
    unsigned long long m_recoverStrategic;
    unsigned long long m_lastAccessTime;
    _Bool m_isUsingNSData;
    unsigned int m_itemSizeLimit;
}

+ (_Bool)isFileValid:(id)arg1;
+ (id)crcPathWithMappedKVPath:(id)arg1;
+ (id)mappedKVPathWithID:(id)arg1;
+ (void)didBecomeActive;
+ (void)didEnterBackground;
+ (void)tryCleanUpInstanceByLRU;
+ (id)memoryMappedKVWithID:(id)arg1 recoverStrategic:(unsigned long long)arg2 cryptKey:(id)arg3 itemSizeLimit:(unsigned int)arg4 hasError:(_Bool *)arg5;
+ (id)memoryMappedKVWithID:(id)arg1 recoverStrategic:(unsigned long long)arg2 hasError:(_Bool *)arg3;
+ (id)memoryMappedKVWithID:(id)arg1 cryptKey:(id)arg2;
+ (id)memoryMappedKVWithID:(id)arg1 itemSizeLimit:(unsigned int)arg2;
+ (id)memoryMappedKVWithID:(id)arg1;
+ (id)sharedDefaultMemoryMappedKV;
+ (id)defaultMemoryMappedKV;
+ (void)setCurrentAppState:(long long)arg1;
+ (void)initialize;
+ (void)reportDecodeError;
+ (void)reportMMapFail;
+ (void)reportTruncateFail;
+ (void)reportCRCCheckFailFinal;
+ (void)reportConfirmedCRCCheckFail;
+ (void)reportCRCCheckFail;
+ (void)reportConfirmedLengthFailFinal;
+ (void)reportMetaLengthSmaller;
+ (void)reportMetaLengthGreater;
+ (void)reportConfirmedLengthFail;
+ (void)reportLengthFail;
- (id).cxx_construct;
- (id)path;
- (_Bool)async;
- (_Bool)sync;
- (_Bool)doSync:(_Bool)arg1;
- (void)removeValuesForKeys:(id)arg1;
- (void)removeValueForKey:(id)arg1;
- (id)allKeys;
- (void)enumerateKeys:(CDUnknownBlockType)arg1;
- (unsigned long long)totalSize;
- (unsigned long long)count;
- (_Bool)containsKey:(id)arg1;
- (id)getDataForKey:(id)arg1 defaultValue:(id)arg2;
- (id)getDataForKey:(id)arg1;
- (id)getDateForKey:(id)arg1 defaultValue:(id)arg2;
- (id)getDateForKey:(id)arg1;
- (id)getStringForKey:(id)arg1 defaultValue:(id)arg2;
- (id)getStringForKey:(id)arg1;
- (double)getDoubleForKey:(id)arg1 defaultValue:(double)arg2;
- (double)getDoubleForKey:(id)arg1;
- (float)getFloatForKey:(id)arg1 defaultValue:(float)arg2;
- (float)getFloatForKey:(id)arg1;
- (unsigned long long)getUInt64ForKey:(id)arg1 defaultValue:(unsigned long long)arg2;
- (unsigned long long)getUInt64ForKey:(id)arg1;
- (long long)getInt64ForKey:(id)arg1 defaultValue:(long long)arg2;
- (long long)getInt64ForKey:(id)arg1;
- (unsigned int)getUInt32ForKey:(id)arg1 defaultValue:(unsigned int)arg2;
- (unsigned int)getUInt32ForKey:(id)arg1;
- (int)getInt32ForKey:(id)arg1 defaultValue:(int)arg2;
- (int)getInt32ForKey:(id)arg1;
- (_Bool)getBoolForKey:(id)arg1 defaultValue:(_Bool)arg2;
- (_Bool)getBoolForKey:(id)arg1;
- (id)getArrayOfValueType:(Class)arg1 forKey:(id)arg2;
- (id)getObjectOfClass:(Class)arg1 forKey:(id)arg2;
- (_Bool)setDouble:(double)arg1 forKey:(id)arg2;
- (_Bool)setFloat:(float)arg1 forKey:(id)arg2;
- (_Bool)setUInt64:(unsigned long long)arg1 forKey:(id)arg2;
- (_Bool)setInt64:(long long)arg1 forKey:(id)arg2;
- (_Bool)setUInt32:(unsigned int)arg1 forKey:(id)arg2;
- (_Bool)setInt32:(int)arg1 forKey:(id)arg2;
- (_Bool)setBool:(_Bool)arg1 forKey:(id)arg2;
- (_Bool)setObject:(id)arg1 forKey:(id)arg2;
- (_Bool)reKey:(id)arg1;
- (id)cryptKey;
- (void)updateCRCDigest:(const char *)arg1 withSize:(unsigned long long)arg2;
- (void)recaculateCRCDigestWithIV:(const char *)arg1;
- (_Bool)checkFileWithSize:(unsigned long long)arg1 toCRCDigest:(unsigned int)arg2;
- (_Bool)isFileValid;
- (_Bool)doFullWriteBack:(pair_e4c09457)arg1 crypter:(struct AESCrypt *)arg2;
- (_Bool)fullWriteback:(struct AESCrypt *)arg1;
- (id)getRawDataForKey:(id)arg1;
- (pair_95c78d76)doAppendData:(const struct NormalBufferWrap *)arg1 withKey:(id)arg2 isDataHolder:(_Bool)arg3 originKeyLength:(unsigned int)arg4;
- (pair_95c78d76)appendData:(const struct NormalBufferWrap *)arg1 withKey:(struct KeyValueHolder *)arg2 isDataHolder:(_Bool)arg3;
- (pair_95c78d76)appendData:(const struct NormalBufferWrap *)arg1 forKey:(id)arg2 isDataHolder:(_Bool)arg3;
- (_Bool)setDataWrap:(const struct NormalBufferWrap *)arg1 forKey:(id)arg2 isDataHolder:(_Bool)arg3;
- (_Bool)setData:(id)arg1 forKey:(id)arg2 isDataHolder:(_Bool)arg3;
- (_Bool)writeActualSize:(unsigned long long)arg1 andCRC:(unsigned int)arg2 andIV:(const char *)arg3 increaseSequence:(_Bool)arg4;
- (_Bool)oldStyleWriteActualSize:(unsigned long long)arg1;
- (unsigned long long)readActualSize;
- (_Bool)ensureMemorySize:(unsigned long long)arg1;
- (void)gentleTrimAfterFullWriteback:(unsigned long long)arg1;
- (void)trim;
- (void)close;
- (void)clearMemoryState;
- (void)clearAll;
- (void)checkLoadData;
- (void)checkDataValid:(_Bool *)arg1 loadFromFile:(_Bool *)arg2 needFullWriteBack:(_Bool *)arg3;
- (void)loadFromFile:(_Bool *)arg1;
- (void)onMemoryWarning;
- (unsigned int)itemSizeLimit;
- (void)dealloc;
- (id)initWithMMapID:(id)arg1 recoverStrategic:(unsigned long long)arg2 cryptKey:(id)arg3 itemSizeLimit:(unsigned int)arg4 hasError:(_Bool *)arg5;

@end

